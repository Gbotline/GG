from teambotgolf import *
from liff.ttypes import LiffChatContext, LiffContext, LiffSquareChatContext, LiffNoneContext, LiffViewRequest
from akad.ttypes import *
from multiprocessing import Pool, Process
from datetime import datetime
from time import sleep
from Naked.toolshed.shell import execute_js
from bs4 import BeautifulSoup
from humanfriendly import format_timespan, format_size, format_number, format_length
import time, random, sys, json, codecs, threading, glob, re, string, os, requests, subprocess, six, ast, pytz, urllib.request, urllib.parse, urllib.error, urllib.parse,subprocess,unicodedata
import subprocess, youtube_dl, humanize, traceback,asyncio
from gtts import gTTS
from googletrans import Translator
from multiprocessing import Pool, Process
import multiprocessing as mp
from threading import Thread
_session = requests.session()
loop = asyncio.get_event_loop()
import livejson, traceback, threading, subprocess, os
from datetime import datetime, timedelta
import time, random, sys, json, pafy, codecs, html5lib ,shutil ,threading, glob, re, base64, string, os, requests, six, ast, pytz, wikipedia, urllib, urllib.parse, atexit, asyncio, traceback,livejson
_session = requests.session()
from humanfriendly import format_timespan, format_size, format_number, format_length
import time, random, sys, json, codecs, threading, glob, re, string, os, requests, subprocess, six, ast, pytz, urllib.request, urllib.parse, urllib.error, urllib.parse
from gtts import gTTS
botStart = time.time()
APP = "DESKTOPMAC\t6.5.2\tMAC\t10.15.1"
#ball = LINE('azxcvbboll0034@gmail.com','aa112233',appName="DESKTOPMAC\t6.5.2\tMAC\t10.15.1")
#ball = LINE('azxcvbboll112233@gmail.com','aa112233',appName="DESKTOPMAC\t6.5.2\tMAC\t10.15.1")
ball = LINE('vya17262@nezid.com','golf06032543',appName="DESKTOPMAC\t6.5.2\tMAC\t10.15.1")
print("ùôªùôæùô∂ùô∏ùôΩ ùô≥ùôæùôΩùô¥")
#ball.sendMessage("cbafb31fa5ac456e56c07c47c7bcf5e67","‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
now2 = datetime.now()
nowT = datetime.strftime(now2,"[%H:%M:%S]")
#ball.sendMessage("cbafb31fa5ac456e56c07c47c7bcf5e67","‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏ß‡∏•‡∏≤\n" + nowT)
ballMID = ball.profile.mid
cont = ball.getContact(ballMID)
ballMID = ball.getProfile().mid
bot1 = ball.getProfile().mid
ballProfile = ball.getProfile()
ballSettings = ball.getSettings()
chatbot = {
    "admin": [],
    "botMute": [],
    "botOff": [],
}
times = {
    "clock": True,
    "name": ""
}
kickPoll = OEPoll(ball)
set={"gn":{},"gp":{},"iv":{}}
read = {"readPoint":{}}
RX = [ballMID]
Kicker = [ballMID]
Exc = [ball]
Basx = [ball] 
Jsz = [ball]
Exc1 = [ball]
##
pr = ball.getProfile()
cl = pr.mid
ballMID = ball.getProfile().mid
admin = [ballMID]
ballMID = ball.profile.mid
ballProfile = ball.getProfile()
ballSettings = ball.getSettings()
contact = ball.getProfile() 
backup = ball.getProfile() 
backup.displayName = contact.displayName 
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus
#=========
mainbots=RX+Jsz
mainbot=Exc+Jsz
rr = ["'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡∏õ‡∏±‡∏á!'\n‡∏ó‡∏±‡∏ô‡πÉ‡∏î‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏±‡∏ß‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ï‡πá‡∏°‡πÜ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï\nThe End","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!"]
#=========
RXBot= [ballMID]
#=====================Add open admin ===================
Family = ["u043d36cb5db2298595407d06e6405502"]
admin = ["u043d36cb5db2298595407d06e6405502","uafadc43f0a6af61a96f1beb389abc576"]
creator = ["u043d36cb5db2298595407d06e6405502"]
owner = ["u043d36cb5db2298595407d06e6405502"]
staff = ["u043d36cb5db2298595407d06e6405502"]
Bots = [ballMID]
for id in admin:
    if id not in ball.getAllContactIds():
       # ball.findAndAddContactsByMid(id)
        print("[‚óè] ADD ADMIN CONTACT")
    else:
        print("")
#=========================================
helptest = """‚ïî‚ïê‚ïê‚ïê‚ïê ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á BOT
‚ï†/‡∏≠‡∏±‡∏û‡∏ä‡∏∑‡πà‡∏≠ ‡∏ä‡∏∑‡πà‡∏≠(‡∏≠‡∏±‡∏û‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó)
‚ï†/‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ  (‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ‡∏ö‡∏≠‡∏ó)
‚ï†‚îÄ‚îÄ‚îÄ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ä‡πá‡∏Ñ BOT ‚îÄ‚îÄ‚îÄ
‚ï†/‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å (‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å)
‚ï†/speed (‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏ö‡∏≠‡∏ó)
‚ï†/‡∏•‡∏ö‡πÅ‡∏ä‡∏ó (‡∏•‡∏ö‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó)
‚ï†‚îÄ‚îÄ‚îÄ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• BOT ‚îÄ‚îÄ‚îÄ
‚ï† ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó: {bName}
‚ï† ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå: {runtime}
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê""".format(bName="{bName}",ballMID=cl,runtime="{runtime}")
#=========================================
Saints = RXBot + Family + admin + creator + owner + staff
RXFam = RXBot + Family + admin + creator + owner + staff
#===============Add adminbots =========================
for x in Bots:
    admin.append(x)
    print(f"bots add {x}")
#===============Add adminbots =========================

    
#===================================ADD WELCOME=========================
optypesg = {"welcomeMessage":"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì  üéé {name} \n‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏Å‡∏•‡∏∏‡πà‡∏° \n üëâ {group} üëà","leaveMessage":"‡∏Ñ‡∏∏‡∏ì {name} ‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏° {group} \nü§¶ ‡∏≠‡πâ‡∏≤‡∏ß‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏≠ ‡∏ô‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏î‡∏≤‡∏¢ ‡∏û‡∏•‡∏≤‡∏î‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏î‡∏µ‡πÜ ‡∏ã‡∏∞‡πÅ‡∏•‡πâ‡∏ß üòÖ ‡πÑ‡∏ß‡πâ‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏∞ üå†"}
#===================================ADD WELCOME=========================
settings={"unsendMessage":False}
RXCctv={"cyduk":{},"point":{},"sidermem":{}}
mcc = {"wr":{}}
wbanlist = []
protectqr = []
protectkick = []
protecARoin = []
protectinvite = []
protectcancel = []
protectcanceljs = []
protectantijs = []
ghost = []
poradmin = []
special = []
special1 = []
protectflex = []
#===========add welcome========
welcomegroup = []
leavegroup = []
#===========add welcome========
autocancel = {}
autoleaveroom = []
targets = []
msg_id = {}
msg_dict = {}
msg_dict = {}
protect = {
    "kick": {
        "id": {}
    },
    "inv": {
        "id": {}
    },
    "join": {
        "id": {}
    },
    "url": {
        "id": {}
    }
}
emp_flood = {}

#==================Open admin down ===============
with open('server.json', 'r') as fp:
    server = json.load(fp)
for x in server['admin']:
    admin.append(x)
    print(f"admin add {x}")
with open('server2.json', 'r') as fp:
    server2 = json.load(fp)
for x in server2['staff']:
    staff.append(x)
    print(f"staff add {x}")
#==================Open admin up ===============	 
readOpen = codecs.open("read.json","r","utf-8")
read = json.load(readOpen) 
#
waitOpen = codecs.open("Max2.json","r","utf-8")
settingsOpen = codecs.open("max.json","r","utf-8")
imagesOpen = codecs.open("image.json","r","utf-8")
stickersOpen = codecs.open("sticker.json","r","utf-8")
#time1Open = codecs.open("time1.json","r","utf-8")
stickers = json.load(stickersOpen)
wait = json.load(waitOpen)
images = json.load(imagesOpen)
settings = json.load(settingsOpen)
settingsOpen = codecs.open("wait.json","r","utf-8")
wait = json.load(settingsOpen)
#time1 = json.load(time1Open)
#==============ADD BACKUP DOWN =============
with open('protectqr.json', 'r') as fp:
    protectqr = json.load(fp) 	
with open('protectkick.json', 'r') as fp:
    protectkick = json.load(fp)		
with open('protecARoin.json', 'r') as fp:
    protecARoin = json.load(fp)	
#============================================
with open('protectcanceljs.json', 'r') as fp:
    protectcanceljs = json.load(fp)  
with open('protectcancel.json', 'r') as fp:
    protectcancel = json.load(fp)	
with open('protectinvite.json', 'r') as fp:
    protectinvite = json.load(fp)	
with open('protectantijs.json', 'r') as fp:
    protectantijs = json.load(fp)	
with open('ghost.json', 'r') as fp:
    ghost = json.load(fp)
with open('poradmin.json', 'r') as fp:
    poradmin = json.load(fp)
#============================================
with open('welcomegroup.json', 'r') as fp:
    welcomegroup = json.load(fp)
with open('leavegroup.json', 'r') as fp:
    leavegroup = json.load(fp) 
#================BL=========================
with open('st2__b.json', 'r') as fp:
    st2__b = json.load(fp)    
#==============ADD BACKUP UP   =============	    
temp = {"te": "#66FFFF","t": "#6633CC"}
sets = {
    'autoCancel':{"on":True,"members":5},
    "leaveRoom": True,	
    "autoRead": True,
    "pict": True,
    "sti2": False,
    "tagsticker": False,
    "TrapCode": True,
    "changeGroupPicture": [],
    "changePictureProfile": False,
    "Sticker": False,
    "autoJoinTicket": True,
    "autoJoin": True,
    "special": [],
    "Api": True,
    "autoblock": True,
    "image": {
        "name": "",
    },
    "addSticker": {
        "name": "",
        "status": False,
    },
    "messageSticker": {
        "addName": "",
        "addStatus": False,
        "listSticker": {
            "tag": {
                "STKID": "",
                "STKPKGID": "",
                "STKVER": ""
            },
            "lv": {
                "STKID": "",
                "STKPKGID": "",
                "STKVER": ""
            },
            "wc": {
                "STKID": "",
                "STKPKGID": "",
                "STKVER": ""
            },
            "add": {
                "STKID": "",
                "STKPKGID": "",
                "STKVER": ""
            },
            "join2": {
                "STKID": "",
                "STKPKGID": "",
                "STKVER": ""
            },
        }
    },
    "ilstpict": {},    
}    
settings = {
    "lang":"JP",
    "winvite": False,
    "wblacklist": False,
    "dblacklist": False,
    "dblack": False,
    "wblack": False,
    "unsendMessage": False,
    "invite": {},
    "contact": False,
    "winvite": False,
    "block":{},
    "autoJoin": True,
    "changePictureProfile": False,
    "message": """üéÄ ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÅ‡∏≠‡∏îüéÄ
line://ti/p/~0981971406
	""",
    "autoBlock": True,
    "changeGroupPicture": [],
}

RXProtect = {
    "autoAdd": True,
    "autoBlock": True,
}

cctv = {
    "cyduk":{},
    "point":{},
    "sidermem":{}
}

myProfile = {
	"displayName": "",
    "coverId": "",
    "pictureStatus": "",
    "statusMessage": ""
}

Retext = {
    "open": True,
    "autoBlock": True,
}

user1 = ballMID
user2 = "uf16e7700aed711bf44ec5e40e75401a8"
msg_dict1 = {}
mulai = time.time()
Start = time.time()

name = ball.getProfile()
name.displayName = ""
#ball.updateProfile(name)


status = ball.getProfile()
status.statusMessage = ""
ball.updateProfile(status)

def cloneProfile(mid):
    contact = ball.getContact(mid)
    if contact.videoProfile == None:
        ball.cloneContactProfile(mid)
    else:
        profile = ball.getProfile()
        profile.displayName, profile.statusMessage = contact.displayName, contact.statusMessage
        ball.updateProfile(profile)
        pict = ball.downloadFileURL('http://dl.profile.line-cdn.net/' + contact.pictureStatus, saveAs="tmp/pict.bin")
        vids = ball.downloadFileURL('http://dl.profile.line-cdn.net/' + contact.pictureStatus + '/vp', saveAs="tmp/video.bin")
        changeVideoAndPictureProfile(pict, vids)
    coverId = ball.getProfileDetail(mid)['result']['objectId']
    ball.updateProfileCoverById(coverId)
#===============================Def Backup down ===============
def sendTemplate(to, data):
    xyz = LiffChatContext(to)
    xyzz = LiffContext(chat=xyz)
    view = LiffViewRequest('1602687308-GXq4Vvk9', xyzz)
    token = ball.liff.issueLiffView(view)
    url = 'https://api.line.me/message/v3/share'
    headers = {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer %s' % token.accessToken
    }
    data = {"messages":[data]}
    requests.post(url, headers=headers, data=json.dumps(data))
def sendTemplate(group, data):
    xyz = LiffChatContext(group)
    xyzz = LiffContext(chat=xyz)
    view = LiffViewRequest('1602687308-GXq4Vvk9', xyzz)
    token = ball.liff.issueLiffView(view)
    url = 'https://api.line.me/message/v3/share'
    headers = {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer %s' % token.accessToken
    }
    data = {"messages":[data]}
    requests.post(url, headers=headers, data=json.dumps(data))
#  
def searchRecentMessages(to,id):
    for a in ball.talk.getRecentMessagesV2(to,101):
        if a.id == id:
            return a
    return None    
###   
def waktu(secs):
    mins, secs = divmod(secs,60)
    hours, mins = divmod(mins,60)
    days, hours = divmod(hours, 24)
    return '%02d ‡∏ß‡∏±‡∏ô %02d ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á %02d ‡∏ô‡∏≤‡∏ó‡∏µ %02d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ' % (days, hours, mins, secs) 
####new
def dt_to_str(dt):
    return dt.strftime('%H:%M:%S')
def delete_log():
    ndt = datetime.now()
    for data in msg_dict:
        if (datetime.utcnow() - cTime_to_datetime(msg_dict[data]["createdTime"])) > timedelta(1):
            if "path" in msg_dict[data]:
                ball.deleteFile(msg_dict[data]["path"])
            del msg_dict[data]
def cTime_to_datetime(unixtime):
    return datetime.fromtimestamp(int(str(unixtime)[:len(str(unixtime))-3]))    
def sendMentionFooter(to, mid, firstmessage, lastmessage):
    try:
        arrData = ""
        text = "%s " %(str(firstmessage))
        arr = []
        mention = "@LopeAgri"
        slen = str(len(text))
        elen = str(len(text) + len(mention))
        arrData = {'S':slen, 'E':elen, 'M':mid}
        arr.append(arrData)
        text += mention + str(lastmessage)
        nama = "{}".format(ball.getContact(ballMID).displayName)
        img = "http://dl.profile.line-cdn.net/{}".format(ball.getContact(ballMID).pictureStatus)
        ticket = "http://line.me/ti/p/~0981971406"
        ball.sendMessage(to, text, {'AGENT_LINK': ticket, 'AGENT_ICON': img, 'AGENT_NAME': nama, 'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)
    except Exception as error:
        logError(error)
        ball.sendMessage(to, "[ INFO ] Error :\n" + str(error))

def sendMessageWithMention(to, ballMID):
    try:
        aa = '{"S":"0","E":"3","M":'+json.dumps(ballMID)+'}'
        text_ = '@x '
        ball.sendMessage(to, text_, contentMetadata={'MENTION':'{"MENTIONEES":['+aa+']}'}, contentType=0)
    except Exception as error:
        logError(error)
    
def dt_to_str(dt):
    return dt.strftime('%H:%M:%S')

#delete log if pass more than 24 hours
def delete_log():
    ndt = datetime.now()
    for data in msg_dict:
        if (datetime.utcnow() - cTime_to_datetime(msg_dict[data]["createdTime"])) > datetime.timedelta(1):
            del msg_dict[msg_id]
def delete_log():
    ndt = datetime.now()
    for data in msg_dict:
        if (datetime.utcnow() - cTime_to_datetime(msg_dict[data]["createdTime"])) > timedelta(1):
            if "path" in msg_dict[data]:
                ball.deleteFile(msg_dict[data]["path"])
            del msg_dict[data]
def runtime(secs):
    mins, secs = divmod(secs,60)
    hours, mins = divmod(mins,60)
    days, hours = divmod(hours, 24)
    return '%02d ‡∏ß‡∏±‡∏ô %02d ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á %02d ‡∏ô‡∏≤‡∏ó‡∏µ %02d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ' % (days, hours, mins, secs)
def backupData():
    try:
        backup1 = Setmain
        f = codecs.open('setting.json','w','utf-8')
        json.dump(backup1, f, sort_keys=True, indent=4, ensure_ascii=False)
        backup2 = settings
        f = codecs.open('settings.json','w','utf-8')
        json.dump(backup2, f, sort_keys=True, indent=4, ensure_ascii=False)
        backup3 = wait
        f = codecs.open('wait.json','w','utf-8')
        json.dump(backup3, f, sort_keys=True, indent=4, ensure_ascii=False)
        backup4 = read
        f = codecs.open('read.json','w','utf-8')
        json.dump(backup4, f, sort_keys=True, indent=4, ensure_ascii=False)        
        return True
    except Exception as error:
        logError(error)
        return False
def backupProfile():
    profile = ball.getContact(ballxMID)
    settings['myProfile']['displayName'] = profile.displayName
    settings['myProfile']['pictureStatus'] = profile.pictureStatus
    settings['myProfile']['statusMessage'] = profile.statusMessage
    settings['myProfile']['videoProfile'] = profile.videoProfile
    coverId = ball.getProfileDetail()['result']['objectId']
    settings['myProfile']['coverId'] = str(coverId)
def backupData():
    try:
        backup = protectqr
        f = codecs.open('protectqr.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)    
    
        backup = protectkick
        f = codecs.open('protectkick.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)
        
        backup = protecARoin
        f = codecs.open('protecARoin.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)        

        backup = protectcanceljs
        f = codecs.open('protectcanceljs.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)
                
        backup = protectcancel
        f = codecs.open('protectcancel.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)
        
        backup = protectinvite
        f = codecs.open('protectinvite.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)
        
        backup = protectantijs
        f = codecs.open('protectantijs.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)  

        backup = ghost
        f = codecs.open('ghost.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)        
        
        backup = server
        f = codecs.open('server.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)
        
        backup = server2
        f = codecs.open('server2.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)
#==================================Backup BL================================
        backup = st2__b
        f = codecs.open('st2__b.json','w','utf-8')
        json.dump(backup, f, sort_keys=True, indent=4, ensure_ascii=False)        
        return True
    except Exception as error:
        print(error)
        return False
#===============================Def Backup UP   ===============
cont = ball.getContact(id)
def logError(text):
    ball.log("[ERROR] " + str(text))
    time_ = datetime.now()
    with open("errorLog.txt","a") as error:
        error.write("\n[%s] %s" % (str(time), text))

def sendflex(to, data): 
    ratedit = LiffChatContext(to)
    ratedit1 = LiffContext(chat=ratedit)
    view = LiffViewRequest('1643771679-3LNK0BXL', ratedit1)
    token = ball.liff.issueLiffView(view)
    api_url = 'https://api.ball.me/message/v3/share'
    headers = {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer %s' % token.accessToken
    }
    data = {"messages":[data]}
    requests.post(api_url, headers=headers, data=json.dumps(data))
    
def waktu(secs):
    mins, secs = divmod(secs,60)
    hours, mins = divmod(mins,60)
    days, hours = divmod(hours, 24)
    return '%02d ‡∏ß‡∏±‡∏ô %02d ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á %02d ‡∏ô‡∏≤‡∏ó‡∏µ %02d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ' % (days, hours, mins, secs)

def runtime(secs):
    mins, secs = divmod(secs,60)
    hours, mins = divmod(mins,60)
    days, hours = divmod(hours, 24)
    return '%02d ‡∏ß‡∏±‡∏ô %02d ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á %02d ‡∏ô‡∏≤‡∏ó‡∏µ %02d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ' % (days, hours, mins, secs)
def helpbot1():
      helpMessage1 = """‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉ          ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏óüìç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉü•∞ .‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ üòà(‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ö‡∏≠‡∏ó)
‚îÉü•∞ .‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î @
‚îÉü•∞ .‡∏•‡∏ö‡πÅ‡∏≠‡∏î @
‚îÉü•∞ .‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡πÄ‡∏ä‡∏Ñ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)
‚îÉü•∞ .‡∏Ñ‡∏ó‡πÅ‡∏≠‡∏î (‡πÄ‡∏ä‡πá‡∏Ñ ‡∏Ñ‡∏ó.‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉ          ü•∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ï‡∏∞-‡∏£‡∏ß‡∏öü•∞
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉüíî .zx ‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ä‡∏∑‡πà‡∏≠    ü•∞(‡∏£‡∏ß‡∏ö‡∏ä‡∏∑‡πà‡∏≠)üê•
‚îÉüíî .bk @    üíî(‡∏£‡∏ß‡∏ö‡∏Ñ‡∏¥‡∏Å)üê•
‚îÉü•∞ .‡πÄ‡∏ï‡∏∞ @ = ‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó‡πÄ‡∏ï‡∏∞
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉ          ü•∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏áblacklistü•∞
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉüíî  ô·¥Ä…¥         ü•∞(‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏•‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏¢)??
‚îÉüíî .‡∏Ñ‡∏ó‡∏î‡∏≥  üíî(‡πÄ‡∏ä‡πá‡∏Ñ ‡∏Ñ‡∏ó ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏î‡∏≥)üê•
‚îÉ?? .‡πÄ‡∏ï‡∏∞‡∏î‡∏≥  ü•∞(‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ï‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥)üê•
‚îÉü•∞ restart    üíî(‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏ö‡∏≠‡∏ó)üê•
‚îÉüíî offcount ü•∞(‡∏õ‡∏¥‡∏î‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô)üê•
‚îÉüíî count      üíî(‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô)üê•
‚îÉü•∞ godown  ü•∞(‡∏¢‡∏±‡∏î‡∏î‡∏≥‡∏Ñ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡πâ‡∏≠‡∏á)üê•
‚îÉü•∞ blacklist üíî(‡∏•‡∏á ‡∏Ñ‡∏ó.‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏±‡∏î‡∏î‡∏≥)üê•
‚îÉüíî group:save üòà(‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠+‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°)üòà
‚îÉüíî blacktea     üíî(‡∏™‡πà‡∏á ‡∏Ñ‡∏ó.‡∏î‡∏≥ ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥)
‚îÉü•∞ .‡∏¢‡∏Å üíî(‡πÉ‡∏™‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç +10 ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ)
‚îÉü•∞ /getflex       üíî(‡∏à‡∏≥‡∏ô‡∏ß‡∏ô+4 ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ)
‚îÉüíî clearblacklistüíî (‡∏•‡πâ‡∏≤‡∏á ‡∏Ñ‡∏ó ‡∏î‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
‚îÉüíî blackcheck   üíî(‡πÄ‡∏ä‡πá‡∏Ñ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ï‡∏¥‡∏î‡∏î‡∏≥)
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉ          ü•∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏áprotectü•∞
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉü•∞ ‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏ï‡∏∞)
‚îÉü•∞ ‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç)
‚îÉü•∞ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á)
‚îÉü•∞ ‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°)
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉ          ü•∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏áadminbotü•∞
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉü•∞ xexec: (‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®)   
‚îÉü•∞ ‡πÄ‡∏ä‡πá‡∏Ñ (‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏≠‡∏ó)
‚îÉüá®üá¶ ‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö:  ( ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° )
‚îÉüá®üá¶ ‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏≠‡∏Å:  ( ‡πÉ‡∏™‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° )
‚îÉüá®üá¶ ‡πÄ‡∏ä‡∏Ñ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
‚îÉüòà ‡πÄ‡∏ä‡∏Ñ‡∏≠‡∏≠‡∏Å
‚îÉüòà help‡πÄ‡∏Ç‡πâ‡∏≤ & help‡∏≠‡∏≠‡∏Å
‚îÉüòà ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡πÄ‡∏õ‡∏¥‡∏î /  ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡∏õ‡∏¥‡∏î
‚îÉüíî ‡∏ó‡∏±‡∏Å‡∏≠‡∏≠‡∏Å ‡πÄ‡∏õ‡∏¥‡∏î /  ‡∏ó‡∏±‡∏Å‡∏≠‡∏≠‡∏Å ‡∏õ‡∏¥‡∏î
‚îÉüíî ‡πÄ‡∏•‡∏Ç‡∏≤
‚îÉüíî üìç
‚îÉüéÄ b url on             üòà(‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°)üíî
‚îÉüéÄ closelink          üòà(‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°)ü•∞
‚îÉüéÄ Requestlink     üòà(‡∏Ç‡∏≠‡∏•‡∏¥‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°)üíî
‚îÉüá®üá¶ read                  üòà(‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô)ü•∞
‚îÉüá®üá¶ opensecretly    üòà(‡∏î‡∏π‡∏Ñ‡∏ô‡πÅ‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏õ‡∏¥‡∏î)üíî
‚îÉüá®üá¶ closesecretly   üòà(‡∏î‡∏π‡∏Ñ‡∏ô‡πÅ‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏õ‡∏¥‡∏î)ü•∞
‚îÉü•∞ cancel              üòà(‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç)üíî
‚îÉü•∞ Deletechat       üòà(‡∏•‡∏ö‡πÅ‡∏ä‡∏ó)ü•∞
‚îÉü•∞ ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏¢            üòà(‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°)üíî
‚îÉü•∞ ‡∏•‡∏≤‡∏Å‡∏≠‡∏¢üñï           üòà(‡∏ö‡∏¥‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô)üíî
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉ
‚îÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"""
      return helpMessage1  

      return myHelp1
     
#########

def helpbot3():
      helpMessage3 = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
‚ïë‚Ü™.rps (‡πÄ‡∏õ‡πà‡∏≤‡∏¢‡∏¥‡πâ‡∏á‡∏â‡∏∏‡∏ö)
‚ïë‚Ü™.coin (‡∏´‡∏±‡∏ß‡∏Å‡πâ‡∏≠‡∏¢)
‚ïë‚Ü™.slot (‡∏™‡∏•‡πá‡∏≠‡∏ï)
‚ïë‚Ü™.dice (‡∏ó‡∏≠‡∏¢‡πÄ‡∏ï‡πã‡∏≤)
‚ïë‚Ü™.hilo (‡πÑ‡∏Æ‡πÇ‡∏•)
‚ïë‚Ü™.roulette (‡∏£‡∏π‡πÄ‡∏•‡πá‡∏ï‡∏ï‡πå)
‚ïö‚ïê„Äò ùîπùïÜùïÉùïÉ ùîπùïÜùïã ùïÉùïÄ‚Ñïùîº
"""
      return helpMessage3

      return myHelp3

def mentionMembers(to, mids=[]):
    if ball in mids: mids.remove(ball)
    parsed_len = len(mids)//20+1
    result = ''
    mention = '@zeroxyuuki\n'
    no = 0
    for point in range(parsed_len):
        mentionees = []
        for mid in mids[point*20:(point+1)*20]:
            no += 1
            result += '%i. %s' % (no, mention)
            slen = len(result) - 12
            elen = len(result) + 3
            mentionees.append({'S': str(slen), 'E': str(elen - 4), 'M': mid})
            if mid == mids[-1]:
                result += ''
        if result:
            if result.endswith('\n'): result = result[:-1]
            ball.sendMessage(to, result, {'MENTION': json.dumps({'MENTIONEES': mentionees})}, 0)
        result = ''    
def restartBot():
    python = sys.executable
    os.execl(python, python, *sys.argv) 
    
def timeChange(secs):
        mins, secs = divmod(secs,60)
        hours, mins = divmod(mins,60)
        days, hours = divmod(hours,24)
        weeks, days = divmod(days,7)
        months, weeks = divmod(weeks,4)
        year, months = divmod(months,12)
        text = ""
        if year != 0: text += "%02d ‡∏õ‡∏µ" % (year)
        if months != 0: text += "%02d ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô" % (months)
        if weeks != 0: text += " %02d ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå" % (weeks)
        if days != 0: text += " %02d ‡∏ß‡∏±‡∏ô" % (days)
        if hours !=  0: text +=  " %02d ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á" % (hours)
        if mins != 0: text += " %02d ‡∏ô‡∏≤‡∏ó‡∏µ" % (mins)
        if secs != 0: text += " %02d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (secs)
        if text[0] == " ":
                text = text[1:]
        return text    
        
def sendImage(to, path, name="image"):
    try:
        if settings["server"] == "VPS":
            botbas.sendImageWithURL(to, str(path))
    except Exception as error:
        logError(error)

def duc1(to, duc1):
    data={
      "type": "text",
      "text": duc1
      }
    sendTemplate(to, data)

def kickBot(op):
    try:
        if op.type == 0:
            return
        if op.type == 5:
            if RXProtect["autoAdd"] == True:
                #runautoblock = mp.Process(target=ball.findAndAddContactsByMid(op.param1))
                #runautoblock = mp.Process(target=ball.sendMessage(op.param1,str(settings["message"])+ball.getContact(ballMID).displayName))
                ball.findAndAddContactsByMid(op.param1)
                ball.sendMessageWithMention(op.param1,str(settings["message"]))
                #runautoblock.start()
                
                
###

        if op.type == 26 or op.type == 25:
            msg = op.message
            text = msg.text
            text = str(msg.text)
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0 or msg.toType == 1 or msg.toType == 2:
                if msg.toType == 0:
                    if sender != ball.profile.mid:
                        to = sender
                    else:
                        to = receiver
                elif msg.toType == 1:
                    to = receiver
                elif msg.toType == 2:
                    to = receiver
      
                elif msg.contentType == 7:
                    if sets["Sticker"] == True:
                        try:
                            stk_id = msg.contentMetadata['STKID']
                            stk_ver = msg.contentMetadata['STKVER']
                            pkg_id = msg.contentMetadata['STKPKGID']
                            ret = "„Äå Check Sticker „Äç\n"
                            ret += "\nSTKID : {}".format(stk_id)
                            ret += "\nSTKPKGID : {}".format(pkg_id)
                            ret += "\nSTKVER : {}".format(stk_ver)
                            ret += "\nLINK : line://shop/detail/{}".format(pkg_id)
                            print(msg)
                            ball.sendImageWithURL(to, "http://dl.stickershop.line.naver.jp/products/0/0/"+msg.contentMetadata["STKVER"]+"/"+msg.contentMetadata["STKPKGID"]+"/WindowsPhone/stickers/"+msg.contentMetadata["STKID"]+".png")
                            ball.sendMessage(to, str(ret))
                        except Exception as error:
                            ball.sendMessage(to, str(error))
                if msg.text:
                    if msg.text.lower().lstrip().rstrip() in wbanlist:
                        if msg.text not in ballMID:
                           if op.param2 not in Bots and op.param2 not in owner and op.param2 not in admin and op.param2 not in staff and op.param2 not in RXFam:
                               try:
                                   ball.kickoutFromGroup(msg.to,sender,[op.param2])
                                   ball.sendMessage(msg.to,"‡∏ö‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏∏‡∏Å‡πÑ‡∏õ‡∏™‡∏¥555+")
                               except Exception as e:
                                   print(e)
                    for image in images:
                        if msg.text.lower() == image:
                            ball.generateReplyMessage(msg.id)
                            ball.sendReplyImage(msg.id, to, images[image])
                    if "/ti/g/" in msg.text.lower():
                        if sets["autoJoinTicket"] == True:
                            link_re = re.compile('(?:line\:\/|line\.me\/R)\/ti\/g\/([a-zA-Z0-9_-]+)?')
                            links = link_re.findall(text)
                            n_links = []
                            for l in links:
                                if l not in n_links:
                                    n_links.append(l)
                            for ticket_id in n_links:
                                group = ball.findGroupByTicket(ticket_id)
                                ball.acceptGroupInvitationByTicket(group.id,ticket_id)
                                ball.sendMessage(msg.to, "?? ‡∏°‡∏∏‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° ü¶ã\nüëâ %s ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥\nü¶ã ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏•‡∏¥‡∏á‡∏Ñ‡πå ü¶ã" % str(group.name))
                if msg.contentType == 7:
                    if sets["messageSticker"]["addStatus"] == True:
                        name = sets["messageSticker"]["addName"]
                        if name != None and name in sets["messageSticker"]["listSticker"]:
                            sets["messageSticker"]["listSticker"][name] = {
                                "STKID": msg.contentMetadata["STKID"],
                                "STKVER": msg.contentMetadata["STKVER"],
                                "STKPKGID": msg.contentMetadata["STKPKGID"]
                            }
                            ball.sendMessage(msg.to, "Success Added " + name)
                        sets["messageSticker"]["addStatus"] = False
                        sets["messageSticker"]["addName"] = None
                    if sets["addSticker"]["status"] == True:
                        stickers[sets["addSticker"]["name"]]["STKVER"] = msg.contentMetadata["STKVER"]
                        stickers[sets["addSticker"]["name"]]["STKID"] = msg.contentMetadata["STKID"]
                        stickers[sets["addSticker"]["name"]]["STKPKGID"] = msg.contentMetadata["STKPKGID"]
                        f = codecs.open('sticker.json','w','utf-8')
                        json.dump(stickers, f, sort_keys=True, indent=4, ensure_ascii=False)
                        ball.sendMessage(msg.to, "Success Added sticker {}".format(str(sets["addSticker"]["name"])))
                        sets["addSticker"]["status"] = False
                        sets["addSticker"]["name"] = ""
            elif msg.contentType == 7:
                if sets["Sticker"] == True:
                    stk_id = msg.contentMetadata['STKID']
                    stk_ver = msg.contentMetadata['STKVER']
                    pkg_id = msg.contentMetadata['STKPKGID']
                    ret = "‚ïî‚ïê‚ïê[ Sticker Info ]"
                    ret += "\n‚ï† STICKER ID : {}".format(stk_id)
                    ret += "\n‚ï† STICKER PACKAGES ID : {}".format(pkg_id)
                    ret += "\n‚ï† STICKER VERSION : {}".format(stk_ver)
                    ret += "\n‚ï† STICKER URL : line://shop/detail/{}".format(pkg_id)
                    ret += "\n‚ïö‚ïê‚ïê[ Finish ]"
                    ball.sendMessage(msg.to, str(ret))               
        if op.type == 26 or op.type == 25:
            msg = op.message
            sender = msg._from
            try:
               if mcc["wr"][str(msg.text)]:
                   ball.sendMessage(msg.to,mcc["wr"][str(msg.text)])
            except:
              pass
        
        if op.type == 26 or op.type == 25:
            msg = op.message
            text = msg.text
            text = str(msg.text)
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0 or msg.toType == 1 or msg.toType == 2:
                if msg.toType == 0:
                    if sender != ball.profile.mid:
                        to = sender
                    else:
                        to = receiver
                elif msg.toType == 1:
                    to = receiver
                elif msg.toType == 2:
                    to = receiver
      
                elif msg.contentType == 7:
                    if sets["Sticker"] == True:
                        try:
                            stk_id = msg.contentMetadata['STKID']
                            stk_ver = msg.contentMetadata['STKVER']
                            pkg_id = msg.contentMetadata['STKPKGID']
                            ret = "„Äå Check Sticker „Äç\n"
                            ret += "\nSTKID : {}".format(stk_id)
                            ret += "\nSTKPKGID : {}".format(pkg_id)
                            ret += "\nSTKVER : {}".format(stk_ver)
                            ret += "\nLINK : line://shop/detail/{}".format(pkg_id)
                            print(msg)
                            ball.sendImageWithURL(to, "http://dl.stickershop.line.naver.jp/products/0/0/"+msg.contentMetadata["STKVER"]+"/"+msg.contentMetadata["STKPKGID"]+"/WindowsPhone/stickers/"+msg.contentMetadata["STKID"]+".png")
                            ball.sendMessage(to, str(ret))
                        except Exception as error:
                            ball.sendMessage(to, str(error))
                if msg.text:
                    if msg.text.lower().lstrip().rstrip() in wbanlist:
                        if msg.text not in ball.profile.mid:
                            try:
                                ball.kickoutFromGroup(msg.to,[sender])
                                ball.sendMessage(msg.to,"‡∏ö‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏∏‡∏Å‡πÑ‡∏õ‡∏™‡∏¥555+")
                            except Exception as e:
                                print(e)
        if op.type == 122:
            if op.param1 in protect["url"]["id"]:
                if op.param2 not in Bots and op.param2 not in owner and op.param2 not in admin and op.param2 not in staff and op.param2 not in RXFam:
                    if op.param2 not in settings["blacklist"]:
                        settings["blacklist"][op.param2] = True
                    ball.kickoutFromGroup(op.param1,[op.param2])
                    G = ball.getGroup(op.param1)
                    if G.preventedJoinByTicket == True:
                        G.prevntedJoinByTicket = False
                        ball.updateGroup(G)
                    else:
                        if G.preventedJoinByTicket == False:
                            G.preventedJoinByTicket = True
                            ball.updateGroup(G)
        if op.type == 13:
                 if wait["contact"] == True:
                    msg.contentType = 0
                    ball.sendMessage(msg.to,msg.contentMetadata["mid"])
                    if 'displayName' in msg.contentMetadata:
                        contact = ball.getContact(msg.contentMetadata["mid"])
                        path = ball.getContact(msg.contentMetadata["mid"]).picturePath
                        image = 'http://dl.profile.line-cdn.net/'+path
                        ball.sendMessage(msg.to,"- ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå : " + msg.contentMetadata["displayName"] + "\n- ‡πÑ‡∏≠‡∏î‡∏µ‡πÑ‡∏•‡∏ô‡πå : " + msg.contentMetadata["mid"] + "\n- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏•‡∏ô‡πå : " + contact.statusMessage + "\n- ‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÇ‡∏õ‡∏£ : http://dl.profile.line-cdn.net/" + contact.pictureStatus)
                        ball.sendImageWithURL(msg.to, image)
        if op.type == 22:
            if sets["leaveRoom"] == True:
                ball.leaveRoom(op.param1)
        if op.type == 24:
            if sets["leaveRoom"] == True:
                ball.leaveRoom(op.param1) 
            if msg.toType == 1:
                if sets["leaveRoom"] == True:
                    ball.leaveRoom(msg.to)                    
        if op.type == 26:
            type = op.message.contentType
            to = op.message.to
            msg = op.message
            text = msg.text
            if to in special1:
                
                if type == 13:
                    ball.sendMessage(msg.to, "-- ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡∏ß‡∏≤‡∏á‡∏Ñ‡∏ó--")
                    ball.kickoutFromGroup(to,[msg._from])
                
        if op.type == 26:
            type = op.message.contentType
            to = op.message.to
            msg = op.message
            text = msg.text
            if to in special:
                if type == 0:
                    mlow = text.lower()
                    if "http" in mlow or "https" in mlow or "line://" in mlow:
                        if re.match(regex, msg.text):
                        	
                            ball.sendMessage(msg.to, "-- ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡∏ß‡∏≤‡∏á‡∏•‡∏¥‡πâ‡∏á--")
                            ball.kickoutFromGroup(to,[msg._from])
                        else:
                            ball.sendMessage(msg.to, "-- ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡∏ß‡∏≤‡∏á‡∏•‡∏¥‡πâ‡∏á--")
                            ball.kickoutFromGroup(to,[msg._from])
              
#--------------------------#‡∏Å‡∏±‡∏ô‡∏ß‡∏≤‡∏á‡∏•‡∏¥‡πâ‡∏á
      
        if op.type == 26:
            msg = op.message
            if msg.contentType == 22:
                if 'true' in msg.contentMetadata['FLEX_JSON']:
                    if msg.to in protectflex:
                        LnBots["blacklist"][msg.to] = True
                        keyword = msg.contentMetadata['FLEX_JSON']
                        result = keyword.replace('true','True')
                        ball.sendMessage(msg.to, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥:\n‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡πÄ‡∏ü‡∏Å")
                        ball.kickoutFromGroup(msg.to,[msg._from])   
                        print("""\033["""+str(randint(0,1))+""";"""+str(randint(31,36))+"""m[ ‡πÄ‡∏ï‡∏∞‡πÄ‡∏ü‡∏Å] \033[0m""")
#----------------‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡∏ô‡∏∞‡∏à‡πä‡∏∞-------------------                   
        
        if op.type == 124:
            if ballMID in op.param3:
               
                    ball.acceptGroupInvitation(op.param1)
                    time.sleep(0.4)
                    
            if op.param1 in protect["inv"]["id"]:
                if op.param2 not in Bots and op.param2 not in owner and op.param2 not in admin and op.param2 not in staff and op.param2 not in RXFam:
                    if op.param2 not in settings["blacklist"]:
                        settings["blacklist"][op.param2] = True
                    if op.param3 not in settings["blacklist"]:
                        settings["blacklist"][op.param3] = True
                    ball.cancelGroupInvitation(op.param1,[op.param3])
                    ball.kickoutFromGroup(op.param1,[op.param2])

        if op.type == 130:
            if op.param1 in protect["join"]["id"]:
                if op.param2 not in Bots and op.param2 not in owner and op.param2 not in admin and op.param2 not in staff and op.param2 not in RXFam:
                    if op.param2 not in settings["blacklist"]:
                        settings["blacklist"][op.param2] = True
                    ball.kickoutFromGroup(op.param1,[op.param2])
                    G = ball.getGroup(op.param1)
                    if G.preventedJoinByTicket != True:
                        G.prevntedJoinByTicket = True
                        ball.updateGroup(G)

        if op.type == 133:
            if op.param1 in protect["kick"]["id"]:
                if op.param2 not in Bots and op.param2 not in owner and op.param2 not in admin and op.param2 not in staff and op.param2 not in RXFam:
                    if op.param2 not in settings["blacklist"]:
                        settings["blacklist"][op.param2] = True
                    ball.kickoutFromGroup(op.param1,[op.param2])

            if op.param3 in admin:
                if op.param2 not in settings["blacklist"]:
                    settings["blacklist"][op.param2] = True
                ball.kickoutFromGroup(op.param1,[op.param2])
                ball.inviteIntoGroup(op.param1,[op.param3])
            if op.param3 in ball.profile.mid:
                if op.param2 not in admin:
                    if op.param2 not in settings["blacklist"]:
                        settings["blacklist"][op.param2] = True
        if op.type == 55:
            if op.param1 in read["readPoint"]:
                if op.param2 not in read["readMember"][op.param1]:
                    read["readMember"][op.param1].append(op.param2)
       
        if op.type == 25 or op.type == 26:
            msg = op.message
            if msg.contentType == 13:
               if settings["wblacklist"] == True:
                 if msg._from in admin: 
                   if msg.contentMetadata["mid"] in settings["blacklist"]:
                        ball.sendMessage(msg.to, "Blacklist has been recorded.")
                        settings["wblacklist"] = False
                   else:
                        settings["blacklist"][msg.contentMetadata["mid"]] = True
                        settings["wblacklist"] = False
                        ball.sendMessage(msg.to, "Blacklist has been recorded.")
               if settings["dblacklist"] == True:
                 if msg._from in admin: 
                   if msg.contentMetadata["mid"] in settings["blacklist"]:
                        del settings["blacklist"][msg.contentMetadata["mid"]]
                        ball.sendMessage(msg.to, "This blacklist has been deleted.")
                        settings["dblacklist"] = False
                   else:
                        settings["dblacklist"] = False
                        ball.sendMessage(msg.to, "This blacklist has been deleted.")
                        
            if msg.contentType == 26:                        
                if msg.toType == 2:        
                    if msg._from in creator:							
                        if wait["contactadmin"] == True:
                            target = msg.contentMetadata["mid"]      
                            try:
                                Owner['admin'][msg.to] = target
                                backupData()
                                wait["contactadmin"] = False
                                ball.sendMessage(to,"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢\n\n ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¥‡∏°  help admin")
                            except Exception as error:
                                logError(error) 
                                
        if op.type == 25 or op.type == 26:
            msg = op.message
            text = msg.text
            text = str(msg.text)
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
          #  txt      = text.lower()
            if msg.toType == 0 or msg.toType == 1 or msg.toType == 2:
                if msg.toType == 0:
                    if sender != ball.profile.mid:
                        to = sender
                    else:
                        to = receiver
                elif msg.toType == 1:
                    to = receiver
                elif msg.toType == 2:
                    to = receiver
            if msg.contentType == 0:
                teambotboys = msg.text.lower().split(" && ")
                for teambotboy in teambotboys:
                    if teambotboy == "‡∏ù‡∏ù" or teambotboy == "/x help":
                        if msg._from in admin:
                            helpMessage1 = helpMessage1()
                            runhelp = mp.Process(target=ball.sendMessage(to, str(helpMessage1)))
                            runhelp.start()           
                    elif msg.text.startswith('k exec ') or msg.text.startswith('l exec '):
                      if msg._from in admin:
                        try:
                            result = msg.text.replace('g exec ', '') or msg.text.replace('x exec ', '')
                            exec(result)
                        except Exception as error:
                            ball.sendMessage(to, '{}'.format(error))            	
#==========================
                    elif msg.text in ["‡∏Ç‡∏≠‡∏ö‡∏¥‡∏ô‡∏ô‡∏∞"]:
                      if msg._from in admin:
                         _name = msg.text.replace("‡∏Ç‡∏≠‡∏ö‡∏¥‡∏ô‡∏ô‡∏∞","")
                         gs = ball.getGroup(receiver)
                         ball.sendMessage(to, "‡∏à‡∏∞‡∏ö‡∏¥‡∏ô‡∏£‡∏∞‡∏ô‡∏∞")
                         time.sleep(1)                         
                         ball.sendMessage(to, "5")
                         time.sleep(1)
                         ball.sendMessage(to, "4")
                         time.sleep(1)
                         ball.sendMessage(to, "3")
                         time.sleep(1)
                         ball.sendMessage(to, "2")
                         time.sleep(1)
                         ball.sendMessage(to, "1")                    
                         targets = []
                         for g in gs.members:
                             if _name in g.displayName:
                                 targets.append(g.mid)
                         if targets == []:
                             ball.sendMessage(to,"‡∏Å‡∏π‡∏ö‡∏±‡∏Ñ‡πÄ‡∏ï‡∏∞‡∏ß‡πà‡∏∞")
                         else:
                             for target in targets:
                                if not target in admin:
                                     try:
                                         klist=[ball]
                                         kicker=random.choice(klist)
                                         time.sleep(5)
                                         ball.sendMessage(to, "‡∏≠‡∏µ‡∏Å5‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏ï‡∏∞‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏ô")
                                         kicker.kickoutFromGroup(receiver,[target])
                                         print((receiver,[g.mid]))
                                     except:
                                         ball.sendMessage(to,"‡∏ö‡∏¥‡∏ô‡∏Æ‡∏∞‚úà")
                                         print ("Cleanse Group")
#
                    if text.lower() == '/cinv':
                                    try:
                                        if msg.toType == 2:
                                            group = ball.getGroup(receiver)
                                            gMembMids = [contact.mid for contact in group.invitee]
                                            k = len(gMembMids)//30
                                            ball.sendMessage(msg.to,"[ ‡∏¢‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} ‡∏Ñ‡∏ô] \n‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...".format(str(len(gMembMids))))
                                            num=1
                                            for i in range(k+1):
                                                for j in gMembMids[i*30 : (i+1)*30]:
                                                    time.sleep(random.uniform(0.7,0.6))
                                                    ball.cancelGroupInvitation(msg.to,[j])
                                                    print ("[Command] "+str(num)+" => "+str(len(gMembMids))+" cancel members")
                                                    num = num+1
                                                ball.sendMessage(receiver,"oƒ∏")
                                                time.sleep(random.uniform(10))
                                            ball.sendMessage(receiver,"[ ‡∏¢‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} ‡∏Ñ‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß]".format(str(len(gMembMids))))
                                            time.sleep(random.uniform(0.95,1))
                                            #botbas.sendMessage(receiver, None, contentMetadata={"STKID": "119","STKPKGID": "1","STKVER": "100" }, contentType=7)
                                            gname = ball.getGroup(receiver).name
                                            ball.sendMessage(Notify,"[ ‡∏¢‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç >> "+gname+"  <<] \n ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} ‡∏Ñ‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß".format(str(len(gMembMids))))
                                            time.sleep(random.uniform(0.95,1))
                                    except:        
                                        ball.sendMessage(msg.to, "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
#
                    elif text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á':
                      if msg._from in admin:
                         totalTime = time.time() - Start
                         mins, secs = divmod(totalTime,60)
                         hours, mins = divmod(mins,60)
                         days, hours = divmod(hours, 24)
                         resTime = ""
                         if days != 00:
                             resTime += "%2d ‡∏ß‡∏±‡∏ô " % (days)
                         if hours != 00:
                             resTime += "%2d ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á " % (hours)
                         if mins != 00:
                             resTime += "%2d ‡∏ô‡∏≤‡∏ó‡∏µ " % (mins)
                         resTime += "%2d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (secs)
                         totalTime = time.time() - Start
                         mins, secs = divmod(totalTime,60)
                         hours, mins = divmod(mins,60)
                         days, hours = divmod(hours, 24)
                         mounts, days = divmod(days, 30)
                         years, mounts = divmod(mounts, 12)                    	
                         detailShow = helptest.format(bName=ball.getProfile().displayName,runtime=resTime)
                         hMsg = detailShow
                         ball.sendMessage(msg.to, hMsg)
                         
                    elif msg.text.lower().startswith("/‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏° "):
                        group = ball.getCompactGroup(msg.to)
                        gname = msg.text.split(" ")
                        if len(gname) == 1:
                            return ball.sendMessage(msg.to, group.name)
                        gname = msg.text.replace(gname[0] + " ", "")
                        if len(gname) > 50:
                            return ball.sendMessage(msg.to, 'ERROR')
                        group.name = gname
                        ball.updateGroup(group)
                        ball.sendMessage(msg.to, "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô '%s' ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß" % gname)      
                        
                    elif text.lower() == '/‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°':
                        group = ball.getGroup(to)
                        path = "http://dl.profile.line-cdn.net/" + group.pictureStatus
                        ball.sendImageWithURL(to, path)                        

                    elif text.lower() == '/‡πÄ‡∏õ‡∏¥‡∏îqr':
                        if msg.toType == 2:
                            group = ball.getGroup(to)
                            if group.preventedJoinByTicket == False:
                                ball.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
                            else:
                                group.preventedJoinByTicket = False
                                ball.updateGroup(group)
                                ball.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                                
                    elif text.lower() == '/‡∏õ‡∏¥‡∏îqr':
                        if msg.toType == 2:
                            group = ball.getGroup(to)
                            if group.preventedJoinByTicket == True:
                                ball.sendMessage(to, "‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
                            else:
                                group.preventedJoinByTicket = True
                                ball.updateGroup(group)
                                ball.sendMessage(to, "‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                                
                    elif text.lower() == '/‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å':
                        if msg.toType == 2:
                            group = ball.getGroup(to)
                            ret_ = "‚ïî‚ïê‚ïê[ ‚ù§Ô∏è‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‚ù§Ô∏è ]"
                            no = 0 + 1
                            for mem in group.members:
                                ret_ += "\n‚ï† {}. {}".format(str(no), str(mem.displayName))
                                no += 1
                            ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} ‡∏Ñ‡∏ô ]".format(str(len(group.members)))
                            ball.sendMessage(to, str(ret_))       

                    elif "‡πÑ‡∏õ " in msg.text.lower():
                      if msg._from in admin:                    	
                          prov = eval(msg.contentMetadata["MENTION"])["MENTIONEES"]
                          allmid = []
                          for i in range(len(prov)):
                              ball.kickoutFromGroup(msg.to,[prov[i]["M"]])
                              allmid.append(prov[i]["M"])
                          ball.findAndAddContactsByMids(allmid)
                          ball.inviteIntoGroup(msg.to,allmid)
                          ball.cancelGroupInvitation(msg.to,allmid)
                          
                    elif msg.text.lower() == "/gct":
                        group = ball.getCompactGroup(msg.to)
                        created = time.strftime('%d/%m/%Y %H:%M:%S', time.localtime(int(group.createdTime) / 1000))
                        ball.sendMessage(msg.to, "‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°:\n"+created)            
       
                    elif msg.text.lower() == "/mra":
                        group = ball.getGroup(to)
                        num = 0
                        bastest_ = "‚îè‚îÅ‚îÅ„ÄåMID{}„Äç".format(group.name)
                        for contact in group.members:
                            num += 1
                            bastest_ += "\n‚îÉ‚û£ {}.{}\n‚îÉ‚û£{}".format(num, contact.displayName, contact.mid)
                        bastest_ += "\n‚îó‚îÅ‚îÅ„Äå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} ‡∏Ñ‡∏ô „Äç".format(len(group.members))
                        ball.sendReplyMessage(msg_id, to, bastest_)       
                   
                    elif msg.text.lower() == "/‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å":                     
                        ball.leaveGroup(msg.to)     

                    elif msg.text.lower() == "/‡∏•‡∏ö‡πÅ‡∏ä‡∏ó":                     
                        ball.removeAllMessages(op.param2)
                        ball.sendMessage(to, "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡πÄ‡∏•‡πâ‡∏ß")

                    elif text.lower() == '/speed':          
                        t = time.time()
                        ball.getProfile()
                        z = time.time() - t
                        ball.sendMessage(msg.to, str(z))                             
######################                  !g      
                    elif text.lower() == "/‡∏≠‡∏≠‡∏ô":
                        timeNow = time.time() - Start
                        runtime = timeChange(timeNow)
                        run = "„Äå‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô„Äç\n"
                        run += runtime
                        helps = "{}".format(str(run))
                        data = {
                            "type": "text",
                            "text": "{}".format(str(run)),
                            "sentBy": {
                                 "label": "{}".format(ball.getContact(ballMID).displayName),
                                 "iconUrl": "https://obs.line-scdn.net/{}".format(ball.getContact(ballMID).pictureStatus),
                                 "linkUrl": "line://nv/profilePopup/mid=uf16e7700aed711bf44ec5e40e75401a8"
                            }
                        }
                        sendTemplate(to, data)        
                        
                    elif text.lower() == "‡∏≠‡∏≠‡∏ô":
                        timeNow = time.time() - Start
                        runtime = timeChange(timeNow)
                        contact = ball.getContact(ballMID)
                        run = "‚á® ‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏ö‡∏≠‡∏ó ‚á¶\n"
                        run += runtime
                        data = {
                            "type": "flex",
                            "altText": "{}".format(run),
                            "contents": {
                                    "type": "bubble",
                                "styles": {
                                    "body": {
                                        "backgroundColor": '#000000'
                                     },
                                },
                                "hero": {
                                                "type": "image",
                                                "url": "https://obs.line-scdn.net/{}".format(contact.pictureStatus),
                                                "size": "full",
                                                "aspectRatio": "1:1",
                                                "aspectMode": "fit",
                                            },
                                "body": {
                                    "type": "box",
                                    "layout": "vertical",
                                    "contents": [                              
                                        {
                                            "type": "text",
                                            "text": "{}".format(run),
                                            "wrap": True,
                                            "color": "#990066",
                                            "align": "center",
                                            "gravity": "center",
                                            "size": "md"
                                        },
                                   ]
                               }
                            }
                        }
                        sendTemplate(to, data)                                    
                        
                    elif text.lower() == '.‡∏ô‡∏°':
                                gifnya = ['https://i.pinimg.com/originals/87/a8/9b/87a89b5aeaf35ba0c8879db5a136ccbd.gif']
                                data = {
                                    "type": "template",
                                    "altText": "Image carouserl",
                                    "template": {
                                        "type": "image_carousel",
                                        "columns": [
                                            {
                                                "imageUrl": "{}".format(random.choice(gifnya)),
                                                "size": "full",
                                                "action": {
                                                    "type": "uri",
                                                    "uri": "line://ti/p/~0981971406"
                                                }
                                            }
                                        ]
                                    }
                                }
                                sendTemplate(to, data)
                                
                    elif text.lower() == '.‡∏ó‡πà‡∏≤‡∏´‡∏°‡∏≤':
                                gifnya = ['https://sv1.picz.in.th/images/2020/11/28/j4bALy.gif']
                                data = {
                                    "type": "template",
                                    "altText": "Image carouserl",
                                    "template": {
                                        "type": "image_carousel",
                                        "columns": [
                                            {
                                                "imageUrl": "{}".format(random.choice(gifnya)),
                                                "size": "full",
                                                "action": {
                                                    "type": "uri",
                                                    "uri": "line://ti/p/~0981971406"
                                                }
                                            }
                                        ]
                                    }
                                }
                                sendTemplate(to, data)      

                    elif text.lower() == '555':
                                gifnya = ['https://media.giphy.com/media/gHohwrHIWhU8UboBsl/giphy.gif']
                                data = {
                                    "type": "template",
                                    "altText": "Image carouserl",
                                    "template": {
                                        "type": "image_carousel",
                                        "columns": [
                                            {
                                                "imageUrl": "{}".format(random.choice(gifnya)),
                                                "size": "full",
                                                "action": {
                                                    "type": "uri",
                                                    "uri": "line://ti/p/~0981971406"
                                                }
                                            }
                                        ]
                                    }
                                }
                                sendTemplate(to, data)                        
                                
                    elif msg.text.lower().startswith("‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô "):
                        sep = text.split(" ")
                        textnya = text.replace(sep[0] + " ", "")
                        text = "{}".format(textnya)
                        contact = ball.getContact(ballMID)
                        data = {
                            "type": "flex",
                            "altText": "ùîπùïÜùïÉùïÉ ùîπùïÜùïã ùïÉùïÄ‚Ñïùîº",
                            "contents": {
                                "type": "bubble",
                                "styles": {
                                    "body": {
                                        "backgroundColor": '#FFFFFF'
                                        },
                                     },
                                "hero": {
                                    "type": "image",
                                    "url": "https://obs.line-scdn.net/{}".format(contact.pictureStatus),
                                    "size": "full",
                                    "aspectRatio":"1:1",
                                    "aspectMode":"cover"
                                },
                                "body": {
                                    "type": "box",
                                    "layout": "horizontal",
                                    "contents": [
                                        {
                                            "type": "text",
                                            "text": "{}".format(text),
                                            "color":"#000000",
                                            "wrap": True,
                                            "align": "center",
                                            "gravity": "center",
                                            "size": "xl"
                                        },
                                    ]
                                }
                            }
                        }
                        sendTemplate(to, data)        
                        
                    elif msg.text.lower().startswith("‡∏¢‡∏π‡∏ó‡∏π‡∏õ"):
                                sep = text.split(" ")
                                search = text.replace(sep[0] + " ","")
                                r = requests.get("https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&q={}&type=video&key=AIzaSyApzHZ18jUd3BdkhL_xcwAI_zxqwb9fuy4".format(str(search)))
                                data = r.text
                                a = json.loads(data)
                                if a["items"] != []:
                                    ret_ = []
                                    yt = []
                                    for music in a["items"]:
                                        ret_.append({
                                            "type": "bubble",
                                            "styles": {
                                                "header": {
                                                    "backgroundColor": "#66FF99" ##CCFF33
                                                },
                                                "body": {
                                                   "backgroundColor": "#66FF99", #66FFFF
                                                   "separator": True,
                                                   "separatorColor": "#66FF99"
                                                },
                                                "footer": {
                                                    "backgroundColor": "#000000", #CCFF33
                                                    "separator": True,
                                                   "separatorColor": "#66FF99"
                                               }
                                            },
                                            "header": {
                                                "type": "box",
                                                "layout": "horizontal",
                                                "contents": [
                                                   {
                                                        "type": "text",
                                                        "text": "Youtube",
                                                        "weight": "bold",
                                                        "color": "#000000", #FF00FF
                                                        "size": "sm"
                                                    }
                                                ]
                                            },
                                            "hero": {
                                                "type": "image",
                                                "url": "https://i.ytimg.com/vi/{}/maxresdefault.jpg".format(music['id']['videoId']),
                                                "size": "full",
                                                "aspectRatio": "20:13",
                                                "aspectMode": "cover",
                                                "action": {
                                                    "type": "uri",
                                                    "uri": "line://nv/profilePopup/mid=ub90fee136a68d4602aa10f734f24ff42"
                                                }
                                            },
                                            "body": {
                                                "type": "box",
                                                "spacing": "md",
                                                "layout": "horizontal",
                                                "contents": [{
                                                    "type": "box",
                                                    "spacing": "none",
                                                    "flex": 1,
                                                    "layout": "vertical",
                                                    "contents": [{
                                                        "type": "image",
                                                        "url": "https://obs.line-scdn.net/{}".format(ball.getContact(ballMID).pictureStatus),
                                                        "aspectMode": "cover",
                                                        "gravity": "bottom",
                                                        "size": "sm",
                                                        "aspectRatio": "1:1",
                                                        "action": {
                                                          "type": "uri",
                                                          "uri": "https://www.youtube.com/watch?v=%s" % music['id']['videoId']
                                                        }
                                                    }]
                                                }, {
                                                    "type": "separator",
                                                    "color": "#000000" #111111
                                                }, {
                                                    "type": "box",
                                                    "contents": [{
                                                        "type": "text",
                                                        "text": "ùîπùïÜùïÉùïÉ ùîπùïÜùïã ùïÉùïÄ‚Ñïùîº",
                                                        "color": "#000000", #0000EE
                                                        "size": "md",
                                                        "weight": "bold",
                                                        "flex": 1,
                                                        "gravity": "top"
                                                    }, {
                                                        "type": "text",
                                                        "text": "%s" % music['snippet']['title'],
                                                        "color": "#000000", #005500
                                                        "size": "sm",
                                                        "weight": "bold",
                                                        "flex": 3,
                                                        "wrap": True,
                                                        "gravity": "top"
                                                    }],
                                                    "flex": 2,
                                                    "layout": "vertical"
                                                }]
                                            },
                                            "footer": {
                                                "type": "box",
                                                "layout": "vertical",
                                                "contents": [{
                                                    "type": "box",
                                                    "layout": "horizontal",
                                                    "contents": [{
                                                        "type": "button",
                                                        "flex": 2,
                                                        "style": "primary",
                                                        "color": "#66FF99", #3333FF
                                                        "height": "sm",
                                                        "action": {
                                                            "type": "uri",
                                                            "label": "‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π",
                                                            "uri": "https://youtu.be/{}".format(str(music['id']['videoId']))
                                                        }
                                                    }, {
                                                        "flex": 3,
                                                        "type": "button",
                                                        "margin": "sm",
                                                        "style": "primary",
                                                        "color": "#FF3333", #111111
                                                        "height": "sm",
                                                        "action": {
                                                            "type": "uri",
                                                            "label": "‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á",
                                                            "uri": "line://ti/p/~0981971406"
                                                        }
                                                    }]
                                                }, {
                                                    "type": "button",
                                                    "margin": "sm",
                                                    "style": "primary",
                                                    "color": "#66FF99", #111111
                                                    "height": "sm",
                                                    "action": {
                                                        "type": "uri",
                                                        "label": "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á",
                                                        "uri": "line://ti/p/~0981971406"
                                                    }
                                                }]
                                            }
                                        }
                                    )
                                        yt.append('https://youtu.be/' +music['id']['videoId'])
                                    k = len(ret_)//10
                                    for aa in range(k+1):
                                        data = {
                                            "type": "flex",
                                            "altText": "Youtube",
                                            "contents": {
                                                "type": "carousel",
                                                "contents": ret_[aa*10 : (aa+1)*10]
                                            }
                                        }
                                        sendTemplate(to, data)                        
            
                    elif msg.text.lower().startswith("‡πÑ‡∏≠‡∏î‡∏µ‡πÑ‡∏•‡∏ô‡πå "):
                            sep = text.split(" ")
                            bastxt = text.replace(sep[0] + " ", "")
                            bot = ball.findContactsByUserid(bastxt)
                            line = bot.mid
                            ball.sendMessage(to,"line://ti/p/~" + bastxt)   
                            ball.sendContact(to, line)           

                    elif text.lower() == '‡∏Ñ‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°' or text.lower() == "/‡πÅ‡∏≠‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°":
                        group = ball.getGroup(to)
                        GS = group.creator
                        adminroom = GS.mid
                        name = GS.displayName
                        pp = GS.pictureStatus
                        data = {
                            "type": "flex",
                            "altText": "ùîπùïÜùïÉùïÉ ùîπùïÜùïã ùïÉùïÄ‚Ñïùîº",
                            "contents": {
                                "type": "bubble",
                                "body": {
                                    "type": "box",
                                    "layout": "vertical",
                                    "contents": [
                                        {
                                            "type":"text",
                                            "text":"‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ",
                                            "size":"md",
                                            "weight":"bold",
                                            "color":"#000000",
                                            "align":"center"
                                        },
                                        {
                                            "type":"text",
                                            "text": " "
                                        },
                                        {
                                            "type": "image",
                                            "url": "https://profile.line-scdn.net/" + str(pp),
                                            "size": "lg"
                                        },
                                        {
                                            "type":"text",
                                            "text":" "
                                        },
                                        {
                                            "type":"text",
                                            "text":"{}".format(name),
                                            "size":"md",
                                            "weight":"bold",
                                            "color":"#000000",
                                            "align":"center"
                                       },
                                   ]
                                }
                            }
                        }
                        sendTemplate(to, data)     
                        ball.sendContact(to, adminroom)          

                    elif msg.text.lower() == '/‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°':
                        group = ball.getCompactGroup(msg.to)
                        try:
                            ccreator = group.creator.mid
                            gcreator = group.creator.displayName
                        except:
                            ccreator = None
                            gcreator = '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°'
                        if not group.invitee:
                            pendings = 0
                        else:
                            pendings = len(group.invitee)
                        qr = '‡∏õ‡∏¥‡∏î' if group.preventedJoinByTicket else '‡πÄ‡∏õ‡∏¥‡∏î'
                        if group.preventedJoinByTicket:
                            ticket = 'URL ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà'
                        else:
                            ticket = 'https://line.me/R/ti/g/' + str(ball.reissueGroupTicket(group.id))
                        created = time.strftime('%d/%m/%Y %H:%M:%S', time.localtime(int(group.createdTime) / 1000))
                        path = 'http://dl.profile.line-cdn.net/' + group.pictureStatus
                        res = ''
                        res += '‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°: ' + group.name
                        res += '\nGID: ' + group.id
                        res += '\n‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°: ' + gcreator
                        res += '\n‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°: ' + created
                        res += '\n‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ' + str(len(group.members))
                        res += '\n‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ' + str(pendings)
                        res += '\n‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ URL: ' + qr
                        res += '\nURL: ' + ticket
                        ball.sendMessage(group.id, res)                                                                         
#########################################
                    elif msg.text.lower().startswith("‡∏û‡∏π‡∏î "):
                            sep = text.split(" ")
                            say = text.replace(sep[0] + " ", "")
                            lang = 'th'
                            tts = gTTS(text=say, lang=lang)
                            tts.save("hasil.mp3")
                            ball.sendAudio(msg.to, "hasil.mp3")  
##
                    elif msg.text.startswith("/spam "):
                       sep = text.split(" ")
                       number = text.replace(sep[0] + " ","")
                       if len(number) > 0:
                          if number.isdigit():
                              number = int(number)
                              if number > 200:                                             
                                    ball.sendMessage(to,"‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î200‡∏≠‡∏¢‡πà‡∏≤‡∏°‡∏≤‡∏ï‡∏•‡∏Å‡πÑ‡∏≠‡∏™‡∏±‡∏™")
                              else:
                                    for i in range(0,number):
                                         data = {'type':'text','text':str(number)}
                                         sendTemplate(msg.to, data)
                                         number -= 1
                                         time.sleep(0.001)
                                         data = {'type':'text','text':str(i+1)}
                                         sendTemplate(msg.to, data)
                                         i += 1+1
                                         time.sleep(0.001)
                          else:
                             ball.sendMessage(to,"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô")
                             
                    elif msg.text.startswith(".say "):
                      if msg._from in admin:
                         spl = msg.text.split(" ")
                         try:
                             amount = spl[1]
                         except:
                             return ball.sendMessage(msg.to,'‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:\n/say [‡∏à‡∏≥‡∏ß‡∏ô‡∏ß‡∏ô] [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°]')
                         if amount.isdigit():
                             amount = int(amount)       	                    
                         else:
                            return ball.sendMessage(msg.to,"‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:\n.say [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°]")
                         hMsg = msg.text.replace(spl[0] + " " + str(amount) + " ", "")
                         if len(hMsg.split(" ")) == 2:
                             return ball.sendMessage(msg.to,"‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:\n.say [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°]")
                         for i in range(amount):
                             ball.sendMessage(msg.to, hMsg)    
                              
                    elif msg.text.startswith("/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å "):
                        try:
                            iWant = text.split(" ")[1]
                        except:
                            return ball.sendMessage(msg.to, '‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]')
                        if iWant.isdigit():
                            amount = int(iWant)
                        else:
                            return ball.sendMessage(msg.to, '‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]')
                        nowGet = 0
                        M = ball.getRecentMessagesV2(msg.to, amount)
                        MsgID = []
                        for x, i in enumerate(M):
                            if x != 0:
                                if i._from == cl:
                                    MsgID.append(i.id)
                                    if len(MsgID) == amount:
                                        break
                        IDS = 0
                        for i in MsgID:
                            try:
                              ball.unsendMessage(i)
                              IDS = IDS + 1
                            except:
                                continue
                        ball.sendMessage(msg.to, "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å {} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß".format(IDS))                              
#==========================
#                    elif text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á':
#                           helpMessage2 = helpbot2()
 #                          ball.sendMessage(msg.to, str(helpMessage2))
                    elif text.lower() == '.‡∏•‡∏π‡∏Å‡πÄ‡∏•‡πà‡∏ô':
                           helpMessage3 = helpbot3()
                           #ball.sendMessage(msg.to, str(helpMessage3))                           
                    elif teambotboy == '.‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á1' or teambotboy == 'kg':
                        if msg._from in owner:	
                           helpMessage1 = helpbot1()
                           ball.sendMessage(msg.to, str(helpMessage1))                         
####             
                    elif msg.text.lower().startswith("‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ "):
                        if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                contact = ball.getContact(ls)
                                mi_d = contact.mid
                                ball.sendContact(msg.to, mi_d)
                    elif msg.text.lower().startswith("‡πÑ‡∏≠‡∏î‡∏µ "):
                        if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            ret_ = "[MID]"
                            for ls in lists:
                                ret_ += "\n~~>" + ls
                            ball.sendMessage(msg.to, str(ret_))               
                    elif msg.text.lower().startswith("‡∏ä‡∏∑‡πà‡∏≠ "):
                        if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                contact = ball.getContact(ls)
                                ball.sendMessage(msg.to, "[‡∏ä‡∏∑‡πà‡∏≠]\n" + contact.displayName)
                    elif msg.text.lower().startswith("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "):
                        if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                contact = ball.getContact(ls)
                                ball.sendMessage(msg.to, "[‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞]\n{}" + contact.statusMessage)
                    elif msg.text.lower().startswith("‡∏£‡∏π‡∏õ "):
                        if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                path = "http://dl.profile.line.naver.jp/" + ball.getContact(ls).pictureStatus
                                ball.sendImageWithURL(msg.to, str(path))
                    elif ".‡∏´‡∏≤‡∏£‡∏π‡∏õ " in msg.text.lower():
                        separate = msg.text.split(" ")
                        search = msg.text.replace(separate[0] + " ","")
                        with requests.session() as web:
                            r = web.get("https://api.boteater.co/googleimg?search={}".format(urllib.parse.quote(search)))
                            data = r.text
                            data = json.loads(data)
                            if data["result"] != []:
                                items = data["result"]
                                path = random.choice(items)
                                a = items.index(path)
                                b = len(items)
                                ball.sendImageWithURL(to, str(path))
#== ===================
                    elif text.lower() == ".‡πÄ‡∏ä‡∏Ñ‡∏ö‡∏±‡∏Ñ":
                    	if msg._from in admin:
                         try:ball.inviteIntoGroup(to, [ballMID]);has = "OK"
                         except:has = "NOT"
                         try:ball.kickoutFromGroup(to, [ballMID]);has1 = "OK"
                         except:has1 = "NOT"
                         if has == "OK":sil = "‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏Ñ"
                         else:sil = "‡∏ö‡∏±‡∏Ñ"
                         if has1 == "OK":sil1 = "‡∏ö‡∏±‡∏Ñ"
                         else:sil1 = "‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏Ñ"
                         ball.sendMessage(to, "‚ú¥üî•[‡πÄ‡∏ä‡∏Ñ‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏Ñ]üî•‚ú¥\n‚ú™‚û£ ‡πÄ‡∏ï‡∏∞ : {}".format(sil1,sil))
                    elif text.lower() == '.‡∏•‡∏π‡∏Å‡πÄ‡∏•‡πà‡∏ô': 
                       ball.sendReplyMessage(msg.id, msg.to,help())
                    elif text.lower() == '.rps':
                        s = random.choice(["‡∏Ñ‡πâ‡∏≠‡∏ô","‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©","‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£","‡∏Ñ‡πâ‡∏≠‡∏ô","‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©","‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£"])
                        ball.sendReplyMessage(msg.id, msg.to,"‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πà‡∏≤‡∏¢‡∏¥‡πâ‡∏á‡∏â‡∏∏‡∏ö : "+ s)
                    elif text.lower() == '.coin':
                        n = random.choice(["‡∏´‡∏±‡∏ß","‡∏Å‡πâ‡∏≠‡∏¢","‡∏´‡∏±‡∏ß","‡∏Å‡πâ‡∏≠‡∏¢"])
                        ball.sendReplyMessage(msg.id, msg.to,"‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏¢‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç. . .")
                        ball.sendMessage(msg.to,"‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏¢‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç : "+ n)
                    elif text.lower() == '.slot':
                        s = random.choice('üçáüçáüçãüçëüçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçëüçí')
                        t = random.choice('üçáüçáüçãüçëüçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçë??')
                        r = random.choice('üçáüçáüçãüçëüçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçëüçí')
                        v = random.choice('üçáüçáüçãüçëüçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçëüçí')
                        a = random.choice('üçáüçá????üçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçë??')
                        ball.sendReplyMessage(msg.id, msg.to,"‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÅ‡∏°‡∏ä‡∏ä‡∏µ‡∏ô. . .")
                        ball.sendMessage(msg.to,"‡∏ú‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÅ‡∏°‡∏ä‡∏ä‡∏µ‡∏ô :\n"+" | "+s+" | "+t+" | "+r+" | "+v+" | "+a+" | ")
                    elif text.lower() == '.dice':
                        f = random.choice('123456')
                        ball.sendReplyMessage(msg.id, msg.to,"‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡∏≠‡∏¢‡∏π‡πà. . .")
                        ball.sendMessage(msg.to,"‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤ : "+f+" ‡πÅ‡∏ï‡πâ‡∏°")
                    elif text.lower() == '.hilo':
                        f = random.choice('123456')
                        r = random.choice('123456')
                        t = random.choice('123456')
                        d = int(f) + int(r) + int(t)
                        ball.sendReplyMessage(msg.id, msg.to, "‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡∏ó‡∏±‡πâ‡∏á3‡∏•‡∏π‡∏Å. . .")
                        ball.sendMessage(msg.to, "üé≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≠‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏îüé≤\n\n"+"‡∏•‡∏π‡∏Å‡∏ó‡∏µ‡πà 1 : "+f+" ‡πÅ‡∏ï‡πâ‡∏°"+"\n"+"‡∏•‡∏π‡∏Å‡∏ó‡∏µ‡πà 2 : "+r+" ‡πÅ‡∏ï‡πâ‡∏°"+"\n"+"‡∏•‡∏π‡∏Å‡∏ó‡∏µ‡πà 3 : "+t+" ‡πÅ‡∏ï‡πâ‡∏°"+"\n\n"+"‡πÅ‡∏ï‡πâ‡∏°‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î "+str(d)+" ‡πÅ‡∏ï‡πâ‡∏°")
                    elif text.lower() == '.roulette':
                        s = random.choice(rr)
                        ball.sendReplyMessage(msg.id, msg.to, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏é‡∏ß‡πà‡∏≤...")
                        ball.sendMessage(msg.to, s)
###############################2222#‡∏ø22*‡∏ø7‡∏ø7%-%8‡∏ø8#8‡∏ø8%+‡∏ø+#(#++%%++‡∏ø‡∏ø++‡∏ø2+2+2+
                    elif msg.text.lower().startswith("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• "):
                        if 'MENTION' in msg.contentMetadata.keys()!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                contact = ball.getContact(ls)
                                ball.sendMessage(msg.to, contact.displayName)
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                                contact = ball.getContact(ls)
                                ball.sendMessage(msg.to, contact.statusMessage)
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            ret_ = ""
                            for ls in lists:
                                ret_ += ls
                            ball.sendMessage(msg.to, str(ret_))
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                path = "http://dl.profile.line-cdn.net/" + ball.getContact(ls).pictureStatus
                                ball.sendImageWithURL(msg.to, str(path))                                
#==========================
#####                      
                    elif text.lower().startswith("/exec\n") or "/exec" in msg.text:
                       try:
                           code = msg.text.replace("/exec\n", "")
                           exec(code)
                       except Exception as error:
                           ball.sendMessage(to, "Error : {}".format(error))
                           
########################################222222222222        /‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å
                    elif msg.text.lower() == '‡πÄ‡∏ä‡∏Ñ‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå':
                            tst = "‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°:\n"
                            if len(wbanlist) > 0:
                                for word in wbanlist:
                                    tst += "- %s \n"%word
                                ball.sendMessage(msg.to,tst)
                            else:
                                ball.sendMessage(msg.to," ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î") 
              
                    elif msg.text.lower().startswith("‡∏•‡∏ö‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå "):
                         wunban = msg.text.lower().split()[1:]
                         wunban = " ".join(wunban)
                         if wunban in wbanlist:
                             wbanlist.remove(wunban)
                             ball.sendMessage(msg.to,"%s ‡∏•‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°‡πÅ‡∏•‡πâ‡∏ß."%wunban)
                         else:
                             ball.sendMessage(msg.to,"%s is not blacklisted."%wunban)
                    elif msg.text.lower().startswith("‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå "):
                         wban = msg.text.lower().split()[1:]
                         wban = " ".join(wban)
                         wbanlist.append(wban)
                         ball.sendMessage(msg.to,"%s ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏õ‡∏•‡∏¥‡∏ß‡∏ô‡∏∞."%wban)
                    if text.lower() == "‡∏ï‡∏±‡πâ‡∏áapi":
                       sa = "‡∏ß‡∏µ‡∏ò‡∏µ‡πÉ‡∏ä‡πâ api "
                       sa += "\n- ‡∏ï‡∏±‡πâ‡∏áapi ‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î;;‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö"
                       sa += "\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á >\\<"
                       sa += "\n‡∏ï‡∏±‡πâ‡∏áapi ‡πÄ‡∏ó‡∏™;;‡πÄ‡∏ó‡∏™‡∏ó‡∏≥‡πÑ‡∏°"
                       data = {"type": "text","text": "{}".format(sa),"sentBy": {"label": "ùîπùïÜùïÉùïÉ ùîπùïÜùïã ùïÉùïÄ‚Ñïùîº", "iconUrl": "https://obs.line-scdn.net/{}".format(ball.getContact(ballMID).pictureStatus),"linkUrl": "line://nv/profilePopup/mid=uf16e7700aed711bf44ec5e40e75401a8"}}
                       sendTemplate(to,data)
                       
                    if msg.text.startswith("‡∏ï‡∏±‡πâ‡∏áapi "):
                       try:
                           delcmd = msg.text.split(" ")
                           get = msg.text.replace(delcmd[0]+" ","").split(";;")
                           kw = get[0]
                           ans = get[1]
                           mcc["wr"][kw] = ans
                           f=codecs.open('sb.json','w','utf-8')
                           json.dump(mcc, f, sort_keys=True, indent=4, ensure_ascii=False)
                           ball.sendMessage(msg.to,"‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î: " + str(kw) + "\n‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö: "+ str(ans))
                       except Exception as Error:
                           print(Error)
                    if msg.text.startswith("‡∏•‡πâ‡∏≤‡∏áapi "):
                        try:
                            delcmd = msg.text.split(" ")
                            getx = msg.text.replace(delcmd[0] + " ","")
                            del mcc["wr"][getx]
                            ball.sendMessage(msg.to, "‡∏Ñ‡∏≥ " + str(getx) + " ‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß")
                            f=codecs.open('sb.json','w','utf-8')
                            json.dump(mcc, f, sort_keys=True, indent=4, ensure_ascii=False)
                        except Exception as Error:
                            print(Error)
                    if msg.text.lower() == "‡πÄ‡∏ä‡∏Ñapi":
                        lisk = "[ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÇ‡∏ï‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ]\n"
                        for i in mcc["wr"]:
                            lisk+="\n‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î: "+str(i)+"\n‡∏ï‡∏≠‡∏ö‡πÇ‡∏ï‡πâ: "+str(mcc["wr"][i])+"\n"
                        lisk+="\n‡∏ß‡∏¥‡∏ò‡∏µ‡∏•‡πâ‡∏≤‡∏áapi >\\<\n‡∏•‡πâ‡∏≤‡∏áapi ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡πâ‡∏≤‡∏á"
                        data = {"type": "text","text": "{}".format(lisk),"sentBy": {"label": "ùîπùïÜùïÉùïÉ ùîπùïÜùïã ùïÉùïÄ‚Ñïùîº", "iconUrl": "https://obs.line-scdn.net/{}".format(ball.getContact(ballMID).pictureStatus),"linkUrl": "line://nv/profilePopup/mid=uf16e7700aed711bf44ec5e40e75401a8"}}
                        sendTemplate(to,data)
                    
                    elif "qr " in msg.text.lower():
                                data = re.split("qr ",msg.text,flags=re.IGNORECASE)
                                if data[0] == "":
                                    if msg.toType != 0:
                                        ball.sendImageWithURL(msg.to,"https://chart.googleapis.com/chart?cht=qr&chs=500x500&chl="+data[1])
                                    else:
                                        ball.sendImageWithURL(msg.from_,"https://chart.googleapis.com/chart?cht=qr&chs=500x500&chl="+data[1])
                    elif msg.text in ["‡∏•‡∏≤‡∏Å‡∏≠‡∏¢üñï"]:
                      xyz = ball.getGroup(to)
                      mem = [c.mid for c in xyz.members]
                      targets = []
                      for x in mem:
                        if x not in [admin,owner,creator,ball.profile.mid]:targets.append(x)
                      if targets:
                        imnoob = 'simple.js gid={} token={} app={}'.format(to, ball.authToken, "DESKTOPMAC\t6.5.2\tMAC\t10.15.1")
                        for x in targets:
                                if x not in owner and x not in admin not in RXFam:
                                    imnoob += ' uid={}'.format(x)
                        success = execute_js(imnoob)
                    
                    elif text.lower().startswith(".zx "):
                        if msg._from in admin:
                            sep = text.split(" ")
                            midn = text.replace(sep[0] + " ","")
                            hmm = text.lower()
                            G = ball.getGroup(msg.to)
                            members = [G.mid for G in G.members]
                            targets = []
                            imball = 'simple.js gid={} token={} app={}'.format(to, ball.authToken, "DESKTOPMAC\t6.5.2\tMAC\t10.15.1")
                            for x in members:
                                contact = ball.getContact(x)
                                msg = op.message
                                testt = contact.displayName.lower()
                                if midn in testt:targets.append(contact.mid)
                            if targets == []:return ball.sendMessage(to,"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ " + midn + " ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ")
                            for target in targets:
                                #print(target,targets)
                                imball += ' uid={}'.format(target)
                            success = execute_js(imball)
                            ball.sendMessage(to,"‡πÄ‡∏ï‡∏∞‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ " + midn + " ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                    elif msg.text.lower().startswith('.bk '):
                        if msg._from in admin:
                            no = 0
                            if 'MENTION' in msg.contentMetadata.keys():
                                mentions = ast.literal_eval(msg.contentMetadata['MENTION'])
#                                if len(mentions['MENTIONEES']) == 1:
#                                    mid = mentions['MENTIONEES'][0]['M']
#                                    return ball.kickoutFromGroup(to, [mid])
                                target = []
                                for mention in mentions['MENTIONEES']:
                                    mid = mention['M']
                                    #print(mid)
                                    target.append(mid)
                                imball = 'simple.js gid={} token={} app={}'.format(to, ball.authToken, "DESKTOPMAC\t6.5.2\tMAC\t10.15.1")
                                for tg in target:
                                    #print(tg,target)
                                    imball += " uid={}".format(tg)
                                execute_js(imball)
                                ball.sendMessage(to,"KICK(s) !")
                            else:
                                ball.sendMessage(to, 'TAG(s) !')

                    elif msg.text.lower() == "/mid":
                        ball.sendMessage(to,str(msg._from))
                    elif msg.text.lower().startswith(".‡πÄ‡∏ä‡∏Ñ "):
                        mid = msg.text.split(" ")[1]
                        ball.sendContact(to,mid)
                    elif msg.text.lower() == ".‡∏ï‡∏±‡∏™":
                        ball.sendMessage(to,str(ball.getContact(msg._from).statusMessage))
                    elif msg.text.lower().startswith("/getflex"):
                        if msg._from not in admin:return
                        aa = msg.text.replace(msg.text.split(' ')[0] + ' ','')
                        x = ball.talk.getRecentMessagesV2(to, int(aa))
                        for msg in x:
#                            print(msg)
                            if msg._from != ball.profile.mid:
                                if 'FLEX_JSON' in msg.contentMetadata:
                                    true = True
#                                    print(msg)
                                    data = msg.contentMetadata['FLEX_JSON']
                                    try:
                                        exec("sendTemplate(to,{'type': 'flex','altText': 'STEAL','contents': " + msg.contentMetadata['FLEX_JSON'] + "})")
                                        ball.sendMessage(to,str(data))
                                        time.sleep(0.9)
                                    except Exeception as e:
                                        ball.sendMessage(to,str(e))
                    elif msg.text.lower() == "!groups":
                        if msg._from in admin:
                            no = 1
                            text = ""
                            name = ball.profile.displayName
                            groups = ball.getGroupIdsJoined()
                            for group in groups:
                                g = ball.getGroup(group)
                                text += "%s. %s\n" % (str(no),str(g.name))
                                no += 1
                            ball.sendMessage(to,"%s in group:\n%s\nTotal %s Group(s)" % (str(name),str(text),str(len(groups))))
                    elif ("‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• " in msg.text):
                          if wait["selfbot"] == True:
                            if msg._from in admin[msg.to]:
                               key = eval(msg.contentMetadata["MENTION"])
                               key1 = key["MENTIONEES"][0]["M"]
                               mi = ball.getContact(key1)
                               ball.sendMessage(msg.to, "‚òÜ Name : "+str(mi.displayName)+"\n ‚òÜMid : " +key1+"\n‚òÜ Status Msg"+str(mi.statusMessage))
                               ball.sendMessage(msg.to, None, contentMetadata={'mid': key1}, contentType=13)
                               if "videoProfile='{" in str(ball.getContact(key1)):
                                   ball.sendVideoWithURL(msg.to, 'http://dl.profile.line-cdn.net/'+str(mi.picturePath)+'/vp.small')
                               else:
                                   ball.sendImageWithURL(msg.to, 'http://dl.profile.line-cdn.net/'+str(mi.picturePath))

                    elif msg.text.lower().startswith("‡∏¢‡∏Å"):
                          if msg._from in admin:
                               args = msg.text.replace("‡∏¢‡∏Å","")
                               mes = 0
                               try:
                                  mes = int(args[1])
                               except:
                                  mes = 0
                               M = ball.getRecentMessagesV2(receiver, 500)
                               MId = []
                               for ind,i in enumerate(M):
                                   if ind == 1:
                                      pass
                                   else:
                                       if i._from == ball.profile.mid:
                                           MId.append(i.id)
                                           if len(MId) == mes:
                                               break
                               def unsMes(id):
                                   ball.unsendMessage(id)
                               for i in MId:
                                   thread1 = threading.Thread(target=unsMes, args=(i,))
                                   thread1.start()
                                   thread1.join()
                    elif msg.text.lower() == ".‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞‡πÄ‡∏õ‡∏¥‡∏î":
                        if msg._from in admin:
                            if to in protect["kick"]["id"]:
                                ball.sendMessage(to,"Protection Kick is already Enable")
                            else:
                                protect["kick"]["id"][to] = True
                                ball.sendMessage(to,"Protection Kick is Enable")
                    elif msg.text.lower() == ".‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞‡∏õ‡∏¥‡∏î":
                        if msg._from in admin:
                            if to in protect["kick"]["id"]:
                                del protect["kick"]["id"][to]
                                ball.sendMessage(to,"Protection Kick is Disable")
                            else:
                                ball.sendMessage(to,"Protection Kick is already Disable")
                    elif msg.text.lower() == ".‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏õ‡∏¥‡∏î":
                        if msg._from in admin:
                            if to in protect["inv"]["id"]:
                                ball.sendMessage(to,"Protection Invite is already Enable")
                            else:
                                protect["inv"]["id"][to] = True
                                ball.sendMessage(to,"Protection Invite is Enable")
                    elif msg.text.lower() == ".‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡∏õ‡∏¥‡∏î":
                        if msg._from in admin:
                            if to in protect["inv"]["id"]:
                                del protect["inv"]["id"][to]
                                ball.sendMessage(to,"Protection Invite is Disable")
                            else:
                                ball.sendMessage(to,"Protection Kick is already Disable")
                    elif msg.text.lower() == ".‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î":
                        if msg._from in admin:
                            if to in protect["join"]["id"]:
                                ball.sendMessage(to,"Protection Join is already Enable")
                            else:
                                protect["join"]["id"][to] = True
                                ball.sendMessage(to,"Protection Join is Enable")
                    elif msg.text.lower() == ".‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡∏¥‡∏î":
                        if msg._from in admin:
                            if to in protect["join"]["id"]:
                                del protect["join"]["id"][to]
                                ball.sendMessage(to,"Protection Join is Disable")
                            else:
                                ball.sendMessage(to,"Protection Join is already Disable")
                    elif msg.text.lower() == ".‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏õ‡∏¥‡∏î":
                        if msg._from in admin:
                            if to in protect["url"]["id"]:
                                ball.sendMessage(to,"Protection URL is already Enable")
                            else:
                                protect["url"]["id"][to] = True
                                ball.sendMessage(to,"Protection URL is Enable")
                    elif msg.text.lower() == ".‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á‡∏õ‡∏¥‡∏î":
                        if msg._from in admin:
                            if to in protect["url"]["id"]:
                                del protect["url"]["id"][to]
                                ball.sendMessage(to,"Protection URL is Disable")
                            else:
                                ball.sendMessage(to,"Protection URL is already Disable")
                    elif teambotboy == ".‡∏£‡∏µ‡∏ö‡∏≠‡∏ó" or teambotboy == "t ree":
                      if msg._from in admin:
                          restartBot()       
                          
                    elif teambotboy == "restart" or teambotboy == "t restart":
                      if msg._from in admin:
                          ball.sendMessage(to, "The bot has been reset successfully.")
                          python = sys.executable
                          os.execl(python, python, *sys.argv)                          

                    elif teambotboy == "group:save" or teambotboy == "t group:save":
                        if msg._from in admin:
                            try:
                               gid = ball.getGroup(to)
                               set["gn"] = str(gid.name)
                               set["gp"] = "http://dl.profile.line-cdn.net/" + str(gid.pictureStatus)
                               set["iv"] = [mem.mid if mem.mid != ball.profile.mid else '' for mem in gid.members]
                               ball.sendReplyMessage(msg.id, to,set["gn"])
                               ball.sendImageWithURL(to,set["gp"])
                            except Exception as e: traceback.print_exc()
                    elif teambotboy == "group:back" or teambotboy == "t group:back":
                      if msg._from in admin:
                          try:
                              gp = ball.getGroup(msg.to)
                              gp.name = set["gn"]
                              runsavegroup = mp.Process(target=ball.updateGroup(gp))
                              set["cgp"] = True
                              runsavegroup = mp.Process(target=ball.sendMessage(to,"change pictgroup"))
                              runsavegroup = mp.Process(target=ball.sendImageWithURL(to,set["gp"]))
                              runsavegroup = mp.Process(target=ball.inviteIntoGroup(to,set["iv"]))
                              runsavegroup.start()
                          except Exception as e: traceback.print_exc()
                    elif teambotboy == "respon" or teambotboy == "‡πÄ‡∏•‡∏Ç‡∏≤":
                      
                            runrespon = mp.Process(target=ball.sendMentionV2(to, ' ‡∏Ñ‡∏£‡∏±‡∏ö‡∏ô‡∏≤‡∏¢‡∏ó‡πà‡∏≤‡∏ô @!',[sender]))
                            runrespon.start()
                    elif teambotboy == "respon" or teambotboy == "‡πÄ‡∏•‡∏Ç‡∏≤":
                      if msg._from in admin:
                            runrespon = mp.Process(target=ball.sendMentionV2(to, '‡∏Ñ‡∏£‡∏±‡∏ö‡∏ô‡∏≤‡∏¢‡∏ó‡πà‡∏≤‡∏ô @!',[sender]))
                            runrespon.start()
                    elif teambotboy == "respon" or teambotboy == "‡πÄ‡∏•‡∏Ç‡∏≤ ":
                      if msg._from in admin:
                            runrespon = mp.Process(target=ball.sendMentionV2(to, '‡∏Ñ‡∏£‡∏±‡∏ö @!',[sender]))
                            runrespon.start()
                    elif teambotboy == "respon" or teambotboy == "‡πÄ‡∏•‡∏Ç‡∏≤  ":
                      if msg._from in admin:
                            runrespon = mp.Process(target=ball.sendMentionV2(to, '‡πÄ‡∏•‡∏Ç‡∏≤‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß @!',[sender]))
                            runrespon.start()
                    elif teambotboy == "respon" or teambotboy == "‡πÄ‡∏•‡∏Ç‡∏≤‡∏à‡πã‡∏≤":
                      if msg._from in admin: 
                            runrespon = mp.Process(target=ball.sendMentionV2(to, '‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ó‡∏≥‡πÑ‡∏°‡∏™‡∏±‡∏™  @!',[sender]))
                            runrespon.start()
                    elif teambotboy == "‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô" or teambotboy == "‡∏£‡∏∞‡∏ö‡∏ö":
                      if msg._from in admin:
                            runrespon = mp.Process(target=ball.sendMentionV2(to, 'xd @!',[sender]))
                            runrespon.start()
                    elif msg.text.lower().startswith(".:"):
                      if msg._from in admin:
                        if Retext["open"] == True:
                                    bctxt = msg.text[len(".:"):].strip()
                                    a = ball.getGroupIdsJoined()
                                    for manusia in a:
                                        gname = ball.getGroup(manusia).name
                                        ball.sendMessage(manusia, (bctxt))
                                        time.sleep(0.1)
                                   # ball.sendMessage(receiver,"‚ú¥Ô∏è‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ôüíØ")
                    elif msg.text.lower() == "‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®":
                        if msg._from in admin:
                            if Retext["open"] == False:
                                Retext["open"] = True
                                ball.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡πâ‡∏ß")
                    elif msg.text.lower() == "‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®":
                        if msg._from in admin:
                            if Retext["open"] == True:
                                Retext["open"] = False
                                ball.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡πâ‡∏ß")

                    elif msg.text.lower().startswith("‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏ä‡∏ó:"):
                        if msg._from in admin:
                            sep = text.split(" ")
                            txt = text.replace(sep[0] + " ","")
                            friends = ball.getAllContactIds()
                            for friend in friends:
                                duc1(friend, "„Äå ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏ä‡∏ó „Äç\n{}".format(str(txt)))
                                time.sleep(1)                                
                            duc1(to, "‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô {} ‡∏Ñ‡∏ô".format(str(len(friends))))
                            #ball.sendMessage(receiver,"‚ú¥Ô∏è‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ôüíØ")
                            #print ("‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
#=================================x setting down ========================== ?? ‡∏°‡∏∏‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° ü¶ã
                    elif teambotboy == '‡πÄ‡∏ä‡πá‡∏Ñ' or teambotboy == 'set':
                        if msg._from in admin:
                           ret_ = "üáπüá≠==[ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∂‡∏õ‡∏¥‡∏î ]==üáπüá≠"                                                       
                           if msg.to in welcomegroup: ret_ += "\n\nüáπüá≠ welcomegroup: On „Äê‚úî„Äë"
                           else: ret_ += "\n\nüáπüá≠ welcomegroup: Off „Äêüö´„Äë"      
                           if msg.to in leavegroup: ret_ += "\n\nüáπüá≠ leavegroup: On „Äê‚úî„Äë"
                           else: ret_ += "\n\nüáπüá≠ leavegroup: Off „Äêüö´„Äë"                                                       
                           random.choice(Basx).sendMessage(to,str(ret_))
#=================================x setting up  ===========================           

                    elif teambotboy == "asdf" or teambotboy == "asdfg":
                      if msg._from in admin:
                          def speedbot():
                              start = time.time()
                              runspeed = mp.Process(target=ball.getProfile())
                              elapse = time.time() - start
                              runspeed = mp.Process(target=ball.sendMessage(to, '%s' % str(elapse/100)))
                          speedbot = threading.Thread(target=speedbot)
                          speedbot.daemon = True
                          speedbot.start()

#===================================================== A D D Leaveall Down ===============================================================================	
#===================================================== A D D Leaveall up ===============================================================================	                        

                    elif teambotboy == ".‡∏î‡∏≥" or teambotboy == "blacklist":
                      if msg._from in admin: 
                        settings["wblacklist"] = True
                        ball.sendMessage(to, "‚Ä¢ Please send the contactor down. ‚Ä¢")
                    elif teambotboy == ".‡∏Ç‡∏≤‡∏ß" or teambotboy == "blacktea":
                      if msg._from in admin: 
                        settings["dblacklist"] = True
                        ball.sendMessage(to, "‚Ä¢ Please send the contactor down. ‚Ä¢")
                    elif teambotboy == "/‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥" or teambotboy == "‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥1":
                      if msg._from in admin: 
                        settings["blacklist"] = {}
                        ball.sendMessage(to, "The blacklist has been cleared.")
                    elif teambotboy == "godown" or teambotboy == "t cb":
                      if msg._from in admin:
                          if msg.toType == 2:
                               _name = msg.text.replace("godown","") or msg.text.replace("t cb","")
                               gs = ball.getGroup(msg.to)
                               ball.sendMessage(msg.to,"The whole group is already stuffed.")
                               targets = []
                               for g in gs.members:
                                   if _name in g.displayName:
                                        targets.append(g.mid)
                               if targets == []:
                                    ball.sendMessage(msg.to,"Something went wrong")
                               else:
                                   for target in targets:
                                       if not target in Family:
                                           try:
                                               settings["blacklist"][target] = True
                                               f=codecs.open('st2__b.json','w','utf-8')
                                               json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                                           except:
                                               ball.sentMessage(msg.to,"An unknown error was encountered.")
#===================Edit ban up ===============   
                    elif teambotboy.startswith("add1 ") or teambotboy.startswith("t add1 "):
                      if msg._from in creator:
                           targets = []
                           key = eval(msg.contentMetadata["MENTION"])
                           key["MENTIONEES"] [0] ["M"]
                           for x in key["MENTIONEES"]:
                               targets.append(x["M"])
                           for target in targets:
                               if target in Family:							   
                                   try:
                                       Owner['admin'][msg.to] = target
                                       backupData()
                                       random.choice(Basx).sendMessage(to, "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢\n\n ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¥‡∏° help")
                                   except:
                                       random.choice(Basx).sendMessage(to, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠.")

                    elif teambotboy.startswith(".‡∏î‡∏≥ ") or teambotboy.startswith("blacklist "):
                      if msg._from in admin:
                           targets = []
                           key = eval(msg.contentMetadata["MENTION"])
                           key["MENTIONEES"] [0] ["M"]
                           for x in key["MENTIONEES"]:
                               targets.append(x["M"])
                           for target in targets:
                               if target not in RXFam:							   
                                   try:
                                       settings["blacklist"][target] = True
                                       f=codecs.open('st2__b.json','w','utf-8')
                                       json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                                       ball.sendMessage(to, "‡πÄ‡∏û‡∏¥‡πà‡∏° {} ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£blacklist‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞.".format(ball.getContact(target).displayName))
                                   except:
                                       ball.sendMessage(to, "Can't find the blacklist list.")
#===================Edit ban up ===============    
                    
                               
                    elif teambotboy.startswith("blacktea ") or teambotboy.startswith("‡∏Ç‡∏≤‡∏ß "):
                      if msg._from in admin:
                           targets = []
                           key = eval(msg.contentMetadata["MENTION"])
                           key["MENTIONEES"] [0] ["M"]
                           for x in key["MENTIONEES"]:
                               targets.append(x["M"])
                           for target in targets:
                               try:
                                   del settings["blacklist"][target]
                                   f=codecs.open('st2__b.json','w','utf-8')
                                   json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                                   ball.sendMessage(to, "‡∏•‡∏ö {} ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£blacklist‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞.".format(ball.getContact(target).displayName))
                               except:
                                   ball.sendMessage(to, "I can't find my contact.")
                    elif teambotboy == "banlist" or teambotboy == "blackcheck":
                      if msg._from in admin:
                        if settings["blacklist"] == {}:
                            ball.sendMessage(to, "Can't find the blacklist list.")
                        else:
                            text = "Blacklisted list.:"
                            for mi_d in settings["blacklist"]:
                                text += "\n- {}".format(ball.getContact(mi_d).displayName)
                            ball.sendMessage(to, str(text))
                    elif "/‡πÇ‡∏ó‡∏£ " in msg.text.lower():
                             if msg.toType == 2:
                                 process = msg.text.split(" ")
                                 process = msg.text.replace(process[0] + " ","")
                                 process = int(process)
                                 try:
                                     ball.sendMessage(msg.to,"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£...")
                                 except:
                                     pass
                                 for var in range(process):
                                     group = ball.getGroup(msg.to)
                                     members = [mem.mid for mem in group.members]
                                     if process <= 30:            	
                                         ball.acquireGroupCallRoute(msg.to)
                                         ball.inviteIntoGroupCall(msg.to, contactIds=members)
                                         
    #                elif text.lower() == "‡πÄ‡∏ä‡∏Ñ‡∏ö‡∏±‡∏Ñ":
     #               	if msg._from in admin:
     #                    try:ball.inviteIntoGroup(to, [ballMID]);has = "OK"
     #                    except:has = "NOT"
     #                    try:ball.kickoutFromGroup(to, [ballMID]);has1 = "OK"
     ##                    except:has1 = "NOT"
     #                    if has == "OK":sil = "‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏Ñ‡∏Ñ‡πà‡∏∞ü•∞"
     #                    else:sil = "‡∏ö‡∏±‡∏Ñ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ü•∫"
     #                    if has1 == "OK":sil1 = "‡∏ö‡∏±‡∏Ñ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ü•∫"
     #                    else:sil1 = "‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏Ñ‡∏Ñ‡πà‡∏∞ü•∞"
     #                    ball.sendMessage(to, "{}".format(sil1,sil))
                    elif teambotboy == "banlist" or teambotboy == "/‡πÄ‡∏ä‡∏Ñ‡∏î‡∏≥":
                      if msg._from in admin:
                        if settings["blacklist"] == {}:
                            ball.sendMessage(to, "Can't find the blacklist list.")
                        else:
                            text = "Blacklisted list.:"
                            for mi_d in settings["blacklist"]:
                                text += "\n- {}".format(ball.getContact(mi_d).displayName)
                            ball.sendMessage(to, str(text))
                    elif teambotboy == ".‡∏Ñ‡∏ó‡∏î‡∏≥" or teambotboy == "Cb":
                      if msg._from in admin:
                        if settings["blacklist"] == {}:
                            ball.sendMessage(to, "Can't find the blacklist list.")
                        else:
                            for mi_d in settings["blacklist"]:
                                ball.sendContact(to, mi_d)
                    
                    elif teambotboy.startswith("‡∏ï‡∏ö ") or teambotboy.startswith("‡πÅ‡∏à‡∏∞ "):
                      if msg._from in admin:
                        if msg.toType == 2:
                             group = ball.getGroup(to)
                             gMembMids = [contact.mid for contact in group.members]
                             matched_list = []
                             for tag in settings["blacklist"]:
                                 matched_list+=[str for str in gMembMids if str == tag]
                             if matched_list == []:
                                 ball.sendMessage(to, "I could not find the blacklist.")
                             else:
                                 for jj in matched_list:
                                     try:
                                         klist=[ball]
                                         kicker=random.choice(klist)
                                         runkickban = mp.Process(target=ball.kickoutFromGroup(to,[jj]))
                                         runkickban.start()
                                     except:
                                         pass
#===================Edit kick down ===============
                    elif text.lower() == "mycover" or text.lower() == "‡∏õ‡∏Å‡πÄ‡∏£‡∏≤":
                            h = ball.getContact(ballMID)
                            cu = ball.getProfileCoverURL(ballMID)
                            #cu = "https://obs.line-scdn.net/{}".format(ball.getContact(sender).pictureStatus)
                            image = str(cu)
                            ball.generateReplyMessage(msg.id)
                            ball.sendReplyImageWithURL(msg.id, to, image)
                    elif teambotboy.startswith("kick ") or teambotboy.startswith("kk "):
                      if msg._from in admin:
                          targets = []
                          key = eval(msg.contentMetadata["MENTION"])
                          key["MENTIONEES"][0]["M"]
                          for x in key["MENTIONEES"]:
                              targets.append(x["M"])
                          for target in targets:					  
                            if target not in RXFam:					  					  
                                  klist=[ball]
                                  kicker=random.choice(klist)
                                  runkick = mp.Process(target=kicker.kickoutFromGroup(to,[target]))
                                  runkick.start()
#===================Edit kick up ===============             

                    

#========================Welcome + leave Down ==========================
                    elif teambotboy.startswith('‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö:'):
                        if msg._from in admin:
                            text = msg.text.replace('‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö: ',"")
                            optypesg["welcomeMessage"] = text
                            ball.sendMessage(msg.to, "Succeed")
                    elif teambotboy.startswith('t welcome:add'):
                        if msg._from in admin:
                            text = msg.text.replace('t welcome:add ',"")
                            optypesg["welcomeMessage"] = text
                            ball.sendMessage(msg.to, "Succeed")
                    elif teambotboy == '‡πÄ‡∏ä‡∏Ñ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö' or teambotboy == 't welcome:check':
                        if msg._from in admin:
                            ball.sendMessage(msg.to, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á: "+str(optypesg["welcomeMessage"]))
                    elif teambotboy.startswith('‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏≠‡∏Å'):
                        if msg._from in admin:
                            text = msg.text.replace('‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏≠‡∏Å ',"")
                            optypesg["leaveMessage"] = text
                            ball.sendMessage(msg.to, "Succeed")
                    elif teambotboy.startswith('t leave:add'):
                        if msg._from in admin:
                            text = msg.text.replace('t leave:add ',"")
                            optypesg["leaveMessage"] = text
                            ball.sendMessage(msg.to, "Succeed")
                    elif teambotboy == '‡πÄ‡∏ä‡∏Ñ‡∏≠‡∏≠‡∏Å' or teambotboy == 't leave:check':
                        if msg._from in admin:
                            ball.sendMessage(msg.to, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á: "+str(optypesg["leaveMessage"]))
                    elif teambotboy == 'leave:help' or teambotboy == 'help‡∏≠‡∏≠‡∏Å':
                        if msg._from in admin:
                            text = "‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á"
                            text += "\n- leave:add ‡∏Ñ‡∏∏‡∏ì {name} ‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏° {group}"
                            text += "\n\n**‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"
                            text += "\n* {name} ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°"
                            text += "\n* {group} ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å"
                            ball.sendReplyMessage(msg_id, msg.to, text)
                    elif teambotboy == 'welcome:help' or teambotboy == 'help‡πÄ‡∏Ç‡πâ‡∏≤':
                        if msg._from in admin:
                            text = "‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á"
                            text += "\n- welcome:add ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì {name} ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà {group}"
                            text += "\n\n**‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"
                            text += "\n* {name} ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°"
                            text += "\n* {group} ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤"
                            ball.sendReplyMessage(msg_id, msg.to, text)
                    elif teambotboy.startswith('‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö '):
                        
                            spl = msg.text.replace('‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ','')
                            if spl == '‡πÄ‡∏õ‡∏¥‡∏î':
                                if msg.to in welcomegroup:
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                                else:
                                    welcomegroup[msg.to] = True
                                    f=codecs.open('welcomegroup.json','w','utf-8')
                                    json.dump(welcomegroup, f, sort_keys=True, indent=4,ensure_ascii=False)									   
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
                                ball.sendMessage(msg.to, msgs)
                            elif spl == '‡∏õ‡∏¥‡∏î':
                                if msg.to in welcomegroup:
                                    del welcomegroup[msg.to]
                                    f=codecs.open('welcomegroup.json','w','utf-8')
                                    json.dump(welcomegroup, f, sort_keys=True, indent=4,ensure_ascii=False)										 
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
                                else:
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                                ball.sendMessage(msg.to, msgs)
                    elif teambotboy.startswith('‡∏ó‡∏±‡∏Å‡∏≠‡∏≠‡∏Å '):
                        if msg._from in admin:
                            spl = msg.text.replace('‡∏ó‡∏±‡∏Å‡∏≠‡∏≠‡∏Å ','')
                            if spl == '‡πÄ‡∏õ‡∏¥‡∏î':
                                if msg.to in leavegroup:
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                                else:
                                    leavegroup[msg.to] = True
                                    f=codecs.open('leavegroup.json','w','utf-8')
                                    json.dump(leavegroup, f, sort_keys=True, indent=4,ensure_ascii=False)									   
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
                                ball.sendMessage(msg.to, msgs)
                            elif spl == '‡∏õ‡∏¥‡∏î':
                                if msg.to in leavegroup:
                                    del leavegroup[msg.to]
                                    f=codecs.open('leavegroup.json','w','utf-8')
                                    json.dump(leavegroup, f, sort_keys=True, indent=4,ensure_ascii=False)										 
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
                                else:
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                                ball.sendMessage(msg.to, msgs)
                    elif teambotboy.startswith('t welcome '):
                        if msg._from in admin:
                            spl = msg.text.replace('t welcome ','')
                            if spl == 'on':
                                if msg.to in welcomegroup:
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                                else:
                                    welcomegroup[msg.to] = True
                                    f=codecs.open('welcomegroup.json','w','utf-8')
                                    json.dump(welcomegroup, f, sort_keys=True, indent=4,ensure_ascii=False)									   
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
                                ball.sendMessage(msg.to, msgs)
                            elif spl == 'off':
                                if msg.to in welcomegroup:
                                    del welcomegroup[msg.to]
                                    f=codecs.open('welcomegroup.json','w','utf-8')
                                    json.dump(welcomegroup, f, sort_keys=True, indent=4,ensure_ascii=False)										 
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
                                else:
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                                ball.sendMessage(msg.to, msgs)
                    elif teambotboy.startswith('t leave '):
                        if msg._from in admin:
                            spl = msg.text.replace('t leave ','')
                            if spl == 'on':
                                if msg.to in leavegroup:
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                                else:
                                    leavegroup[msg.to] = True
                                    f=codecs.open('leavegroup.json','w','utf-8')
                                    json.dump(leavegroup, f, sort_keys=True, indent=4,ensure_ascii=False)									   
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
                                ball.sendMessage(msg.to, msgs)
                            elif spl == 'off':
                                if msg.to in leavegroup:
                                    del leavegroup[msg.to]
                                    f=codecs.open('leavegroup.json','w','utf-8')
                                    json.dump(leavegroup, f, sort_keys=True, indent=4,ensure_ascii=False)										 
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
                                else:
                                    msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                                ball.sendMessage(msg.to, msgs)
                                
                                
#========================Welcome + leave Down ==========================	

#========================Add tagall down ===============================
                    elif teambotboy == '.‡πÅ‡∏ó‡∏Ñ' or teambotboy == '‡πÅ‡∏ó‡∏Ñ':
                     # if msg._from in admin:
                        members = []
                        if msg.toType == 1:
                            room = ball.getCompactRoom(to)
                            members = [mem.mid for mem in room.contacts]
                        elif msg.toType == 2:
                            group = ball.getCompactGroup(to)
                            members = [mem.mid for mem in group.members]
                        else:
                            return ball.sendMessage(to, 'Failed mentionall members, use this command only on room or group chat')
                        if members:
                            mentionMembers(to, members)
#========================Add tagall down ===============================   

#===============================Add admin down ===============
                    elif teambotboy.startswith('.‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î ') or teambotboy.startswith('t addadmin '):
                        if msg._from in owner:
                            targets = []
                            key = eval(msg.contentMetadata["MENTION"])
                            key["MENTIONEES"][0]["M"]
                            for x in key["MENTIONEES"]:
                                targets.append(x["M"])
                            for target in targets:
                                try:
                                    server["admin"].append(target)
                                    admin.append(target)
                                    f=codecs.open('server.json','w','utf-8')
                                    json.dump(server, f, sort_keys=True, indent=4,ensure_ascii=False)
                                    ball.sendMessage(to,"‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
                                except:
                                    ball.sendMessage(msg.to, "Something went wrong")
                    elif teambotboy.startswith('addstaff ') or teambotboy.startswith('t addstaff '):
                        if msg._from in admin or msg._from in owner:
                            targets = []
                            key = eval(msg.contentMetadata["MENTION"])
                            key["MENTIONEES"][0]["M"]
                            for x in key["MENTIONEES"]:
                                targets.append(x["M"])
                            for target in targets:
                                server2["staff"].append(target)
                                staff.append(target)
                                f=codecs.open('server2.json','w','utf-8')
                                json.dump(server2, f, sort_keys=True, indent=4,ensure_ascii=False)
                                ball.sendMessage(to,"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ï‡∏≤‡∏ü‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
                    elif teambotboy.startswith('.‡∏•‡∏ö‡πÅ‡∏≠‡∏î ') or teambotboy.startswith('t deladmin '):
                        if msg._from in owner:
                            targets = []
                            key = eval(msg.contentMetadata["MENTION"])
                            key["MENTIONEES"][0]["M"]
                            for x in key["MENTIONEES"]:
                                targets.append(x["M"])
                            for target in targets:
                                try:
                                    server["admin"].remove(target)
                                    admin.remove(target)
                                    f=codecs.open('server.json','w','utf-8')
                                    json.dump(server, f, sort_keys=True, indent=4,ensure_ascii=False)
                                    ball.sendMessage(to,"‡∏•‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
                                except:
                                    ball.sendMessage(msg.to, "Something went wrong")
                    elif teambotboy.startswith('delstaff ') or teambotboy.startswith('t delstaff '):
                        if msg._from in admin or msg._from in owner:
                            targets = []
                            key = eval(msg.contentMetadata["MENTION"])
                            key["MENTIONEES"][0]["M"]
                            for x in key["MENTIONEES"]:
                                targets.append(x["M"])
                            for target in targets:
                                server2["staff"].remove(target)
                                staff.remove(target)
                                f=codecs.open('server2.json','w','utf-8')
                                json.dump(server2, f, sort_keys=True, indent=4,ensure_ascii=False)
                                ball.sendMessage(to,"‡∏•‡∏ö‡∏™‡∏ï‡∏≤‡∏ü‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")						
#===============================Add admin UP =============== 
                    elif teambotboy == "‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô":
                        tz = pytz.timezone("Asia/Makassar")
                        timeNow = datetime.now(tz=tz)
                        day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                        hari = ["‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå", "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", "‡∏û‡∏∏‡∏ò", "‡∏û‡∏§‡∏´‡∏±‡∏™", "‡∏®‡∏∏‡∏Å‡∏£‡πå", "‡πÄ‡∏™‡∏≤‡∏£‡πå"]
                        bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                        hr = timeNow.strftime("%A")
                        bln = timeNow.strftime("%m")
                        for i in range(len(day)):
                            if hr == day[i]: hasil = hari[i]
                        for k in range(0, len(bulan)):
                            if bln == str(k): bln = bulan[k-1]
                        readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\n‡πÄ‡∏ß‡∏•‡∏≤ : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                        if to in read['readPoint']:
                            try:
                                del read['readPoint'][to]
                                del read['readMember'][to]
                            except:
                                pass
                            read['readPoint'][to] = msg_id
                            read['readMember'][to] = []
                            ball.sendMessage(to, "‚úØÕúÕ°‚ùÇ ‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô ‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÄ‡πÄ‡∏•‡πâ‡∏ß")
                        else:
                            try:
                                del read['readPoint'][to]
                                del read['readMember'][to]
                            except:
                                pass
                            read['readPoint'][to] = msg_id
                            read['readMember'][to] = []
                            ball.sendMessage(to, "‚úØÕúÕ°‚ùÇ ‡∏ï‡∏±‡πâ‡∏á‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≤‡∏ô : \n{}".format(readTime))
                            ball.sendMessage(to, "‡∏û‡∏¥‡∏°‡∏û‡πå! ‡∏≠‡πà‡∏≤‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô")
                    elif teambotboy == "‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô":
                         tz = pytz.timezone("Asia/Makassar")
                         timeNow = datetime.now(tz=tz)
                         day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                         hari = ["‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå", "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", "‡∏û‡∏∏‡∏ò", "‡∏û‡∏§‡∏´‡∏±‡∏™", "‡∏®‡∏∏‡∏Å‡∏£‡πå", "‡πÄ‡∏™‡∏≤‡∏£‡πå"]
                         bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                         hr = timeNow.strftime("%A")
                         bln = timeNow.strftime("%m")
                         for i in range(len(day)):
                             if hr == day[i]: hasil = hari[i]
                         for k in range(0, len(bulan)):
                             if bln == str(k): bln = bulan[k-1]
                         readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\n‡πÄ‡∏ß‡∏•‡∏≤ : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                         if to not in read['readPoint']:
                             ball.sendMessage(to,"‚úØÕúÕ°‚ùÇ ‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÄ‡πÄ‡∏•‡πâ‡∏ß")
                         else:
                             try:
                                 del read['readPoint'][to]
                                 del read['readMember'][to]
                             except:
                                 pass
                             ball.sendMessage(to, "‚úØÕúÕ°‚ùÇ ‡∏•‡∏ö‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≤‡∏ô : \n{}".format(readTime))

                    elif teambotboy == "‡∏≠‡πà‡∏≤‡∏ô":
                         if to in read['readPoint']:
                             if read["readMember"][to] == []:
                                 return ball.sendMessage(to, "‚úØÕúÕ°‚ùÇ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô")
                             else:
                                 no = 0
                                 result = "‚ï≠‚îÄ‚îÄ‚îÄ„Äå ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô „Äç"
                                 for dataRead in read["readMember"][to]:
                                     no += 1
                                     result += "\n‚îú √ó {}. @!".format(str(no))
                                 result += "\n‚ï∞‚îÄ‚îÄ‚îÄ„Äå ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {} ‡∏Ñ‡∏ô „Äç".format(str(len(read["readMember"][to])))
                                 ball.sendMentionV2(to, result, read["readMember"][to])
                                 read['readMember'][to] = []
#===============================Check admin+staff down =========================
                    elif teambotboy == '.‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô' or teambotboy == '/‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô':
                        if msg._from in admin:
                            text="üáπüá≠===[  ü…™s·¥õ ·¥Ä·¥Ö·¥ç…™…¥ ]===üáπüá≠\n"
                            no=1
                            for x in admin:
                                text+=f"\n{no}. {ball.getContact(x).displayName}"
                                no=no+1
                            ball.sendMessage(to,str(text))
                    elif teambotboy == 'checkstaff' or teambotboy == 't checkstaff':
                        if msg._from in admin:
                            text="üáπüá≠===[   ü…™s·¥õ s·¥õ·¥Ä“ì“ì  ]===üáπüá≠\n"
                            no=1
                            for x in staff:
                                text+=f"\n{no}. {ball.getContact(x).displayName}"
                                no=no+1
                            ball.sendMessage(to,str(text))
                    
                    elif msg.text.lower() == '.owner' or msg.text.lower() == 'owner':
                        if msg._from in owner:
                            for x in admin:
                                print(x)
                                ball.sendContact(to,x)
#                                ball.sendMessage(to, None, contentMetadata={'mid':x}, contentType=13)
                    elif teambotboy == '.‡∏Ñ‡∏ó‡πÅ‡∏≠‡∏î' or teambotboy == '.‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô':
                        if msg._from in admin:
                            for x in staff:
                                ball.sendMessage(to, None, contentMetadata={'mid':x}, contentType=13)
#===============================Check admin+staff down =========================  

#===========================ADD listprotect Down ======================================
#=======
                    
                    elif msg.text in ["Deletechat"]:							
                                    ball.sendMessage(msg.to,"The chat has been deleted.")
                                    ball.removeAllMessages(op.param2)
                    elif teambotboy == 'remove:m' or teambotboy == 't remove:m':
                        if msg._from in admin:
                            for x in mainbots:
                                x.removeAllMessages(op.param2) 
                            ball.sendMessage(to,"The chat has been deleted.")
#=============================URL Down ==============================================
                    elif teambotboy == 'b url on' or teambotboy == 't url on':
                        if msg._from in owner:
                            group = ball.getGroup(to)
                            if group.preventedJoinByTicket == False:
                                ball.sendMessage(to,"The link has been opened.")
                            else:
                                group.preventedJoinByTicket = False
                                ball.updateGroup(group)
                            ball.sendMessage(to,"The link is already open.")
                    elif teambotboy == 'closelink' or teambotboy == 't url off':
                        if msg._from in owner:
                            group = ball.getGroup(to)
                            if group.preventedJoinByTicket == True:
                                ball.sendMessage(to,"Rea hundred link closed.")
                            else:
                                group.preventedJoinByTicket = True
                                ball.updateGroup(group)
                            ball.sendMessage(to,"The link is closed.")							
                    elif teambotboy == 'requestlink' or teambotboy == 't url':
                        if msg._from in owner:
                            group = ball.getGroup(to)
                            if group.preventedJoinByTicket == False:
                                ticket = ball.reissueGroupTicket(to)
                                ball.sendMessage(msg.to, "‡∏•‡∏¥‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ:\nhttps://line.me/R/ti/g/{}".format(str(ticket)))
                            else:
                                ball.sendMessage(to,"‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ")							
#=============================URL Down ==============================================                      
#=============================================================================ADD Protect1 ON/OFF DOWN==================
                    elif teambotboy.startswith("wc ") or teambotboy.startswith("t setup "):
                       if msg._from in admin:
                          spl = msg.text.replace('wc ','') or msg.text.replace('t setup ','')
                          if spl == 'on':						                                           
                              if msg.to in welcomegroup:
                                   msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                              else:
                                   welcomegroup[msg.to] = True
                                   f=codecs.open('welcomegroup.json','w','utf-8')
                                   json.dump(welcomegroup, f, sort_keys=True, indent=4,ensure_ascii=False)	
                                   ginfo = ball.getGroup(msg.to)                                  
                                   msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : " +str(ginfo.name)
                              ball.sendMessage(msg.to, msgs)                                   
                                   
                              if msg.to in leavegroup:
                                   msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
                              else:
                                   leavegroup[msg.to] = True
                                   f=codecs.open('leavegroup.json','w','utf-8')
                                   json.dump(leavegroup, f, sort_keys=True, indent=4,ensure_ascii=False)	
                                   ginfo = ball.getGroup(msg.to)    								   
                                   msgs = "‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : " +str(ginfo.name)
                              ball.sendMessage(msg.to, msgs)    


#=============================================================================ADD INSTALL ON/OFF DOWN======================================================================
                    elif teambotboy == 'x protect on' or teambotboy == 'g protect on':
                        if msg._from in admin:
                            for p in ['protecturl','protectkick','protectjoin','protectcanceljs','protectcancel','protectinvite','js','ghost']:
                                ball.sendMessage(to,'g '+str(p)+" on")
										
                    elif teambotboy == 'x protect off' or teambotboy == 'g protect off':
                        if msg._from in admin:
                            for p in ['protecturl','protectkick','protectjoin','protectcanceljs','protectcancel','protectinvite','js','ghost']:
                                ball.sendMessage(to,'g '+str(p)+" off")											
#=============================================================================ADD INSTALL ON/OFF UP========================================================================	  
                    elif teambotboy == 'unsend on' or teambotboy == '‡πÄ‡∏õ‡∏¥‡∏î‡∏à‡∏±‡∏ö‡∏¢‡∏Å':
                        
                            settings["unsendMessage"] = True
                            ball.sendMessage(msg.to, "On:Succeed")
                    elif teambotboy == 'unsend off' or teambotboy == '‡∏õ‡∏¥‡∏î‡∏à‡∏±‡∏ö‡∏¢‡∏Å':
                        
                            settings["unsendMessage"] = False
                            ball.sendMessage(msg.to, "Off:Succeed")
                    elif teambotboy == 'opensecretly' or teambotboy == '‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ö':
                        
                            try:
                                del RXCctv['point'][msg.to]
                                del RXCctv['sidermem'][msg.to]
                                del RXCctv['cyduk'][msg.to]
                            except:
                                pass
                            RXCctv['point'][msg.to] = msg.id
                            RXCctv['sidermem'][msg.to] = ""
                            RXCctv['cyduk'][msg.to]=True
                            ball.sendReplyMessage(msg.id, msg.to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡πÅ‡∏Å‡∏ô‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô")
                    elif teambotboy == 'closesecretly' or teambotboy == '‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ö':
                        
                            if msg.to in RXCctv['point']:
                                RXCctv['cyduk'][msg.to]=False
                                ball.sendReplyMessage(msg.id, msg.to, "‡∏õ‡∏¥‡∏î‡∏™‡πÅ‡∏Å‡∏ô‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô")
                            else:
                                random.choice(Basx).sendReplyMessage(msg.id, msg.to, "‡∏õ‡∏¥‡∏î‡∏™‡πÅ‡∏Å‡∏ô‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô")
               
                    elif teambotboy == "add on" or teambotboy == "t add on":
                      if msg._from in admin:
                          settings["contactadmin"] = True
                          random.choice(Basx).sendMessage(to, "‡∏™‡πà‡∏á ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ‡∏Ñ‡∏ô‡∏ó‡∏µ‡∏à‡∏∞‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏•‡∏á‡∏°‡∏≤.")    
#‡πÄ‡∏û‡∏¥‡πà‡∏°==========================================
                    elif teambotboy.startswith('setautoadd:'):
                        if msg._from in admin:
                            text = msg.text.replace('setautoadd: ',"")
                            settings["message"] = text
                            ball.sendMessage(msg.to, "Succeed")                         
#‡πÄ‡∏û‡∏¥‡πà‡∏°==========================================
                    elif teambotboy == "autoblock on" or teambotboy == "/‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ":
                      if msg._from in admin:
                          settings["autoBlock"] = True
                          ball.sendMessage(to, "The block has been opened.")
                    elif teambotboy == "autoblock off" or teambotboy == "/‡∏õ‡∏¥‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ":
                      if msg._from in admin:
                          settings["autoBlock"] = False
                          ball.sendMessage(to, "The block has been closed.")
                    elif teambotboy == ".‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ" or teambotboy == "/‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ":
                      if msg._from in admin: 
                          settings["changePictureProfile"] = True
                          ball.sendMessage(to, "Please send us pictures.")
                    elif msg.text.lower().startswith("/‡∏≠‡∏±‡∏û‡∏ä‡∏∑‡πà‡∏≠ "):
                          if msg._from in admin:
                            separate = msg.text.split(" ")
                            string = msg.text.replace(separate[0] + " ","")
                            if len(string) <= 10000000000:
                                profile = ball.getProfile()
                                profile.displayName = string
                                ball.updateProfile(profile)
                                ball.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô " + string + "")
                                

            if msg.contentType == 1:
                 
                   if settings["changePictureProfile"] == True:
                     path1 = ball.downloadObjectMsg(msg_id)                     
                     settings["changePictureProfile"] = False
                     ball.updateProfilePicture(path1)
                     ball.sendMessage(msg.to, "done")

            if msg.toType == 2:
              if msg._from in admin:
                  if to in settings["changeGroupPicture"]:
                     path = ball.downloadObjectMsg(msg_id)
                     settings["changeGroupPicture"].remove(to)
                     ball.updateGroupPicture(to, path)
                     ball.sendMessage(to, "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß.")
    except TalkException as talk_error:
        print(talk_error)
        #if talk_error.code in [7, 8, 20]:
        #    sys.exit(1)
        e = traceback.format_exc()
        print(e)
    except KeyboardInterrupt:
        sys.exit(1)
    except Exception as error:
        e = traceback.format_exc()
        print(e)

def mainkick(op):
    try:
#===================== autoAdd =============================
        timeis = time.localtime()
        a = time.strftime('%H:%M:%S', timeis)
        if op.type == 0:
            return
        print ('++ Operation : ( %i ) %s' % (op.type, OpType._VALUES_TO_NAMES[op.type].replace('_', ' ')))
        if op.type == 5:
            if RXProtect["autoAdd"] == True:
                if (settings["message"] in [""," ","\n",None]):
                    pass
                else:
                    ball.sendMessage(op.param1,str(settings["message"]))
#===================== autoBlock =============================
        if op.type == 5:
            if RXProtect["autoBlock"] == True:
                if (settings["message"] in [""," ","\n",None]):
                    pass
                else:
                    runautoblock = mp.Process(target=ball.sendMessage(op.param1,str(settings["message"])+ball.getContact(ballMID).displayName))

#==============================================================================================================
#==============================================[OP TYPE 22 24 JOIN]============================================
#==============================================================================================================
                                                                                         
                
        
 
        if op.type == 130: 
            if op.param1 in welcomegroup:
                try:
                    contact = ball.getContact(op.param2)
                    group = ball.getGroup(op.param1)
                    sMsg = optypesg["welcomeMessage"]
                    sMsg = sMsg.replace("{name}",contact.displayName)
                    sMsg = sMsg.replace("{group}",group.name)
                    ball.sendMessage(op.param1, sMsg)
#=====================================================ADD PIC AND CONTACT DOWN [REVISION BY HUUMEAW]====================================================
                    ball.sendImageWithURL(op.param1,"http://dl.profile.line-cdn.net/"+ball.getContact(op.param2).pictureStatus) #‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£
                 #   ball.sendImageWithURL(op.param1,"http://dl.profile.line-cdn.net/" + ball.getGroup(op.param1).pictureStatus) #‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°										
                   # ball.sendContact(op.param1,op.param2) # ‡∏Ñ‡∏≠‡∏ó‡πÅ‡∏ó‡∏Ñ
#=====================================================ADD PIC AND CONTACT UP==========================================================================                      
                except:pass
        if op.type == 15:
            if op.param1 in leavegroup:
                try:
                    contact = ball.getContact(op.param2)
                    group = ball.getGroup(op.param1)
                    sMsg = optypesg["leaveMessage"]
                    sMsg = sMsg.replace("{name}",contact.displayName)
                    sMsg = sMsg.replace("{group}",group.name)
                    ball.sendMessage(op.param1, sMsg)
#=====================================================ADD PIC AND CONTACT DOWN [REVISION BY HUUMEAW]==========================================================================
                    ball.sendImageWithURL(op.param1,"http://dl.profile.line-cdn.net/"+ball.getContact(op.param2).pictureStatus)
                    ball.sendContact(op.param1,op.param2)
#=====================================================ADD PIC AND CONTACT DOWN==========================================================================  
                except:pass   

        
 
        if op.type == 26:
            if op.message != None and op.message.text != None:
                msg      = op.message
                text     = msg.text
                msg_id   = msg.id
                to       = msg.to
                sender   = msg._from
                if msg.contentType == 0:
                    if settings["unsendMessage"] == True:
                        try:
                            if msg.location != None:
                                unsendmsg = time.time()
                                msg_dict[msg.id] = {"location":msg.location,"from":msg._from,"waktu":unsendmsg}
                            else:
                                unsendmsg = time.time()
                                msg_dict[msg.id] = {"text":msg.text,"from":msg._from,"waktu":unsendmsg}
                        except Exception as e:
                            print (e)
                if msg.contentType == 1:
                    if settings["unsendMessage"] == True:
                        try:
                            unsendmsg1 = time.time()
                            path = ball.downloadObjectMsg(msg_id)
                            msg_dict[msg.id] = {"from":msg._from,"image":path,"waktu":unsendmsg1}
                        except Exception as e:
                            print (e)
                if msg.contentType == 2:
                    if settings["unsendMessage"] == True:
                        try:
                            unsendmsg2 = time.time()
                            path = ball.downloadObjectMsg(msg_id)
                            msg_dict[msg.id] = {"from":msg._from,"video":path,"waktu":unsendmsg2}
                        except Exception as e:
                            print (e)
                if msg.contentType == 3:
                    if settings["unsendMessage"] == True:
                        try:
                            unsendmsg3 = time.time()
                            path = ball.downloadObjectMsg(msg_id)
                            msg_dict[msg.id] = {"from":msg._from,"audio":path,"waktu":unsendmsg3}
                        except Exception as e:
                            print (e)
                if msg.contentType == 7:
                    if settings["unsendMessage"] == True:
                        try:
                            unsendmsg7 = time.time()
                            sticker = msg.contentMetadata["STKID"]
                            link = "http://dl.stickershop.ball.naver.jp/stickershop/v1/sticker/{}/android/sticker.png".format(sticker)
                            msg_dict[msg.id] = {"from":msg._from,"sticker":link,"waktu":unsendmsg7}
                        except Exception as e:
                            print (e)
                if msg.contentType == 13:
                    if settings["unsendMessage"] == True:
                        try:
                            unsendmsg13 = time.time()
                            mid = msg.contentMetadata["mid"]
                            msg_dict[msg.id] = {"from":msg._from,"mid":mid,"waktu":unsendmsg13}
                        except Exception as e:
                            print (e)
                if msg.contentType == 14:
                    if settings["unsendMessage"] == True:
                        try:
                            unsendmsg14 = time.time()
                            path = ball.downloadObjectMsg(msg_id)
                            msg_dict[msg.id] = {"from":msg._from,"file":path,"waktu":unsendmsg14}
                        except Exception as e:
                            print (e)
        if op.type == 25 or op.type == 26:
           
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            #setup_admin(msg.to)
            if msg.contentType == 0:
                msg_dict[msg.id] = {"text":msg.text,"from":msg._from,"createdTime":msg.createdTime}
                
            if msg.contentType == 1:
                    path = ball.downloadObjectMsg(msg_id)
                    msg_dict[msg.id] = {"text":'Gambarnya dibawah',"data":path,"from":msg._from,"createdTime":msg.createdTime}
            if msg.contentType == 7:
                   stk_id = msg.contentMetadata["STKID"]
                   stk_ver = msg.contentMetadata["STKVER"]
                   pkg_id = msg.contentMetadata["STKPKGID"]
                   ret_ = "\n\n--- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå ---"
                   ret_ += "\n- ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå : {}".format(stk_id)
                   ret_ += "\n- ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô‡∏™‡∏ï‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå : {}".format(stk_ver)
                   ret_ += "\n- ‡πÅ‡∏û‡∏Ñ‡πÄ‡∏Å‡∏à‡∏™‡∏ï‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå : {}".format(pkg_id)
                   ret_ += "\n- ·¥ú Ä ü ‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå : line://shop/detail/{}".format(pkg_id)
                   query = int(stk_id)
                   if type(query) == int:
                            data = 'https://stickershop.line-scdn.net/stickershop/v1/sticker/'+str(query)+'/ANDROID/sticker.png'
                            path = ball.downloadFileURL(data)
                            msg_dict1[msg.id] = {"text":str(ret_),"data":path,"from":msg._from,"createdTime":msg.createdTime}
        if op.type == 65:
            if settings["unsendMessage"] == True:
                try:
                    at = op.param1
                    msg_id = op.param2
                    if msg_id in msg_dict:
                        if msg_dict[msg_id]["from"]:
                           if msg_dict[msg_id]["text"] == 'Gambarnya dibawah':
                                ginfo = ball.getGroup(at)
                                arifAR = ball.getContact(msg_dict[msg_id]["from"])
                                zx = ""
                                zxc = ""
                                zx2 = []
                                xpesan =  "--- ‡∏†‡∏≤‡∏û‡∏ñ‡∏π‡∏Å‡∏•‡∏ö ---\n- ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á : "
                                ret_ = "- ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏° : {}".format(str(ginfo.name))
                                ret_ += "\n- ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á : {}".format(dt_to_str(cTime_to_datetime(msg_dict[msg_id]["createdTime"])))
                                ry = str(arifAR.displayName)
                                pesan = ''
                                pesan2 = pesan+"@x \n"
                                xlen = str(len(zxc)+len(xpesan))
                                xlen2 = str(len(zxc)+len(pesan2)+len(xpesan)-1)
                                zx = {'S':xlen, 'E':xlen2, 'M':arifAR.mid}
                                zx2.append(zx)
                                zxc += pesan2
                                text = xpesan + zxc + ret_ + ""
                                ball.sendMessage(at, text, contentMetadata={'MENTION':str('{"MENTIONEES":'+json.dumps(zx2).replace(' ','')+'}')}, contentType=0)
                                ball.sendImage(at, msg_dict[msg_id]["data"])
                           else:
                                ginfo = ball.getGroup(at)
                                arifAR = ball.getContact(msg_dict[msg_id]["from"])
                                ret_ =  "--- ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏•‡∏ö ---\n"
                                ret_ += "- ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á : {}".format(str(arifAR.displayName))
                                ret_ += "\n- ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏° : {}".format(str(ginfo.name))
                                ret_ += "\n- ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á : {}".format(dt_to_str(cTime_to_datetime(msg_dict[msg_id]["createdTime"])))
                                ret_ += "\n- ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏•‡∏ö : {}".format(str(msg_dict[msg_id]["text"]))
                                ball.sendMessage(at, str(ret_))
                        del msg_dict[msg_id]
                except Exception as e:
                    print(e)
        if op.type == 65:
            if settings["unsendMessage"] == True:
                at = op.param1
                msg_id = op.param2
                if msg_id in msg_dict:
                    ah = time.time()
                    ikkeh = ball.getContact(msg_dict[msg_id]["from"])
                    if "text" in msg_dict[msg_id]:
                        waktumsg = ah - msg_dict[msg_id]["waktu"]
                        waktumsg = format_timespan(waktumsg)
                        rat_ = "\nSend At :\n{} ago".format(waktumsg)
                        rat_ += "\nText :\n{}".format(msg_dict[msg_id]["text"])
                        ball.sendMessage(at, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:\n\nMaker :\n"+str(rat_))
                        del msg_dict[msg_id]
                    else:
                        if "image" in msg_dict[msg_id]:
                            waktumsg = ah - msg_dict[msg_id]["waktu"]
                            waktumsg = format_timespan(waktumsg)
                            rat_ = "\nSend At :\n{} ago".format(waktumsg)
                            rat_ += "\nImage :\nBelow"
                            ball.sendMessage(at, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:\n\nMaker :\n"+str(rat_))
                            ball.sendImage(at, msg_dict[msg_id]["image"])
                            del msg_dict[msg_id]
                        else:
                            if "video" in msg_dict[msg_id]:
                                waktumsg = ah - msg_dict[msg_id]["waktu"]
                                waktumsg = format_timespan(waktumsg)
                                rat_ = "\nSend At :\n{} ago".format(waktumsg)
                                rat_ += "\nVideo :\nBelow"
                                ball.sendMessage(at, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:\n\nMaker :\n"+str(rat_))
                                ball.sendVideo(at, msg_dict[msg_id]["video"])
                                del msg_dict[msg_id]
                            else:
                                if "audio" in msg_dict[msg_id]:
                                    waktumsg = ah - msg_dict[msg_id]["waktu"]
                                    waktumsg = format_timespan(waktumsg)
                                    rat_ = "\nSend At :\n{} ago".format(waktumsg)
                                    rat_ += "\nAudio :\nBelow"
                                    ball.sendMessage(at, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:\n\nMaker :\n"+str(rat_))
                                    ball.sendAudio(at, msg_dict[msg_id]["audio"])
                                    del msg_dict[msg_id]
                                else:
                                    if "sticker" in msg_dict[msg_id]:
                                        waktumsg = ah - msg_dict[msg_id]["waktu"]
                                        waktumsg = format_timespan(waktumsg)
                                        rat_ = "\nSend At :\n{} ago".format(waktumsg)
                                        rat_ += "\nSticker :\nBelow"
                                        ball.sendMessage(at, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:\n\nMaker :\n"+str(rat_))
                                        ball.sendImageWithURL(at, msg_dict[msg_id]["sticker"])
                                        del msg_dict[msg_id]
                                    else:
                                        if "mid" in msg_dict[msg_id]:
                                            waktumsg = ah - msg_dict[msg_id]["waktu"]
                                            waktumsg = format_timespan(waktumsg)
                                            rat_ = "\nSend At :\n{} ago".format(waktumsg)
                                            rat_ += "\nContact :\nBelow"
                                            ball.sendMessage(at, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:\n\nMaker :\n"+str(rat_))
                                            ball.sendContact(at, msg_dict[msg_id]["mid"])
                                            del msg_dict[msg_id]
                                        else:
                                            if "location" in msg_dict[msg_id]:
                                                waktumsg = ah - msg_dict[msg_id]["waktu"]
                                                waktumsg = format_timespan(waktumsg)
                                                rat_ = "\nSend At :\n{} ago".format(waktumsg)
                                                rat_ += "\nLocation :\nBelow"
                                                ball.sendMessage(at, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:\n\nMaker :\n"+str(rat_))
                                                ball.sendLocation(at, msg_dict[msg_id]["location"])
                                                del msg_dict[msg_id]
                                            else:
                                                if "file" in msg_dict[msg_id]:
                                                    waktumsg = ah - msg_dict[msg_id]["waktu"]
                                                    waktumsg = format_timespan(waktumsg)
                                                    rat_ = "\nSend At :\n{} ago".format(waktumsg)
                                                    rat_ += "\nFile :\nBelow"
                                                    ball.sendMessage(at, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:\n\nMaker :\n"+str(rat_))
                                                    ball.sendFile(at, msg_dict[msg_id]["file"])
                                                    del msg_dict[msg_id]
        if op.type == 13:
            if ball in op.param3:
                if wait["autoJoin"] == True:
                    if op.param2 not in Bots and op.param2 not in owner and op.param2 not in admin[op.param1] and op.param2 not in staff:
                        ball.acceptGroupInvitation(op.param1)
                        ginfo = ball.getGroup(op.param1)
                    else:
                        ball.acceptGroupInvitation(op.param1)
                        ginfo = ball.getGroup(op.param1)
        if op.type == 55:
            try:
                if RXCctv['cyduk'][op.param1]==True:
                    if op.param1 in RXCctv['point']:
                        Name = ball.getContact(op.param2).displayName
                        if not Name in RXCctv['sidermem'][op.param1]:
                            tt = Name
                            RXCctv['sidermem'][op.param1] += "\n-" + Name
                            ball.sendMentionV2(op.param1, "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏™‡∏≤‡∏¢‡πÅ‡∏≠‡∏ö @!", [op.param2])
            except:pass
    except Exception:
        e = traceback.format_exc()
        print(e)
        pass

    except TalkException as talk_error:
        print(talk_error)
        if talk_error.code in [7, 8, 20]:
            sys.exit(1)
    except KeyboardInterrupt:
        sys.exit(1)
    except:
        e = traceback.format_exc()
        print(e)

def nameUpdate():
    while True:
        try:
            if times["clock"] == True:
                now2 = datetime.now()
                nowT = datetime.strftime(now2,"{%H:%M}")
               # ball.updateProfileAttribute(2,times["name"] + "" + nowT)
            time.sleep(90)
        except Exception as e:
            print(e)
            exit()
threading.Thread(target=nameUpdate).start()
def run():
    while True:
        try:
            ops = kickPoll.singleTrace(count=100)
            if ops != None:
                for op in ops:
                   kickBot(op)
                   mainkick(op)
#                   print(op)
                   kickPoll.setRevision(op.revision)
        except Exception as e:
            logError(e)
if __name__ == "__main__":
    run()
